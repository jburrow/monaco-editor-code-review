{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/uuid/v4.js","webpack:///./src/index.ts","webpack:///./src/events-comments-reducers.ts","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rng","bytesToUuid","options","buf","offset","Array","rnds","random","ii","reduceComments","NavigationDirection","EditorMode","monacoWindow","window","editor","currentUser","actions","onChange","config","verbose","rm","ReviewManager","load","defaultReviewManagerConfig","commentIndent","commentIndentOffset","editButtonAddText","editButtonEditText","editButtonEnableEdit","editButtonEnableRemove","editButtonOffset","editButtonRemoveText","formatDate","readOnly","rulerMarkerColor","rulerMarkerDarkColor","showAddCommentGlyph","showInRuler","verticalOffset","this","activeComment","widgetInlineToolbar","widgetInlineCommentEditor","editorMode","toolbar","currentLineDecorations","currentCommentDecorations","currentLineDecorationLineNumber","events","store","comments","renderStore","editorConfig","getRawOptions","onDidChangeConfiguration","onMouseDown","handleMouseDown","canAddCondition","createContextKey","inlineToolbarElements","createInlineToolbarWidget","editorElements","createInlineEditorWidget","addActions","onMouseMove","handleMouseMove","setReadOnlyMode","set","renderAddCommentLineDecoration","loadFromStore","changeViewZones","changeAccessor","values","viewState","x","getRenderState","comment","id","viewZoneId","removeZone","deletedCommentIds","dirtyCommentIds","refreshComments","console","debug","length","getThemedColor","theme","_themeService","getTheme","getColor","themeName","indexOf","createInlineEditButtonsElement","root","document","createElement","className","style","marginLeft","add","innerText","setAttribute","onclick","setEditorMode","insertComment","appendChild","remove","edit","spacer","removeComment","editComment","handleCancel","focus","handleAddComment","lineNumber","getSelection","endLineNumber","text","textarea","selection","addComment","handleTextAreaKeyDown","e","code","preventDefault","info","ctrlKey","createInlineEditorElement","resize","onkeydown","confirm","fontFamily","cancel","buttonsElement","this_","allowEditorOverflow","getId","getDomNode","getPosition","position","column","preference","addContentWidget","editorElement","setActiveComment","lineNumbersToMakeDirty","push","filterAndMapComments","renderStatus","ReviewCommentRenderState","dirty","lineNumbers","fn","cs","ev","target","lines","range","monaco","Range","marginClassName","zIndex","deltaDecorations","element","setPosition","hasAttribute","detail","map","calculateMarginTopOffset","includeActiveCommentHeight","count","marginTop","lineHeight","iterateComments","item","state","calculateNumberOfLines","layoutInlineToolbar","backgroundColor","hasChildren","isSameUser","author","display","layoutContentWidget","layoutInlineCommentEditor","forEach","color","button","warn","setTimeout","getDateTimeNow","Date","recurseComments","allComments","filterFn","depth","results","filter","parentId","copyCommentState","addEvent","type","targetId","event","createdBy","createdAt","uuid","commentReducer","status","ReviewCommentStatus","deleted","dt","toISOString","tagName","span","commentId","from","cid","hidden","normal","isActive","domNode","history","addZone","afterLineNumber","heightInLines","suppressMouseDown","decorators","entries","ln","isWholeLine","overviewRuler","darkColor","startLineNumber","startColumn","endColumn","split","addAction","label","keybindings","KeyMod","CtrlCmd","KeyCode","F10","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","F12","navigateToComment","next","F11","prev","direction","currentLine","sort","a","b","revealLineInCenter","dirtyLineNumbers","Set","concat","selected","ReviewCommentState","active","size","has","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","Math","byteToHex","toString","substr","bth","join"],"mappings":"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","file":"index-commonjs-es5.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import * as monacoEditor from \"monaco-editor\";\nimport {\n    reduceComments, ReviewCommentStatus, commentReducer, CodeSelection,\n     CommentState as ReviewCommentStore, ReviewCommentState, ReviewCommentEvent,\n    ReviewComment, ReviewCommentRenderState\n} from \"./events-comments-reducers\";\nimport * as uuid from \"uuid/v4\";\nexport {\n    ReviewCommentStore, ReviewCommentEvent, reduceComments\n}\n\ninterface MonacoWindow {\n    monaco: any;\n}\n\nconst monacoWindow = (window as any) as MonacoWindow;\n\nenum NavigationDirection {\n    next = 1,\n    prev = 2\n}\n\nexport enum EditorMode {\n    insertComment = 1,\n    editComment = 2,\n    toolbar = 3\n}\n\n\nexport function createReviewManager(editor: any, currentUser: string, actions?: ReviewCommentEvent[], onChange?: OnActionsChanged, config?: ReviewManagerConfig, verbose?: boolean): ReviewManager {\n    //For Debug: (window as any).editor = editor;\n    const rm = new ReviewManager(editor, currentUser, onChange, config, verbose);\n    rm.load(actions || []);\n    return rm;\n}\n\n\ninterface ReviewCommentIterItem {\n    depth: number;\n    state: ReviewCommentState\n}\n\ninterface OnActionsChanged {\n    (actions: ReviewCommentEvent[]): void\n}\n\nexport interface ReviewManagerConfig {\n    commentIndent?: number;\n    commentIndentOffset?: number;\n    editButtonAddText?: string;\n    editButtonEnableRemove?: boolean;\n    editButtonOffset?: string;\n    editButtonRemoveText?: string;\n    formatDate?: { (dt: Date): string }\n    readOnly?: boolean;\n    reviewCommentIconActive?: string;\n    reviewCommentIconSelect?: string;\n    showInRuler?: boolean;\n    verticalOffset?: number;\n}\n\ninterface ReviewManagerConfigPrivate {\n    commentIndent: number;\n    commentIndentOffset: number;\n    editButtonAddText: string;\n    editButtonEditText: string;\n    editButtonEnableEdit: boolean;\n    editButtonEnableRemove: boolean;\n    editButtonOffset: string;\n    editButtonRemoveText: string;\n    formatDate?: { (dt: Date | string): string };\n    readOnly: boolean;\n    rulerMarkerColor: any;\n    rulerMarkerDarkColor: any;\n    showAddCommentGlyph: boolean\n    showInRuler: boolean;\n    verticalOffset: number;\n}\n\n\nconst defaultReviewManagerConfig: ReviewManagerConfigPrivate = {\n    commentIndent: 20,\n    commentIndentOffset: 20,\n    editButtonAddText: 'Reply',\n    editButtonEditText: 'Edit',\n    editButtonEnableEdit: true,\n    editButtonEnableRemove: true,\n    editButtonOffset: '-10px',\n    editButtonRemoveText: 'Remove',\n    formatDate: null,\n    readOnly: false,\n    rulerMarkerColor: 'darkorange',\n    rulerMarkerDarkColor: 'darkorange',\n    showAddCommentGlyph: true,\n    showInRuler: true,\n    verticalOffset: 0,\n};\n\nconst CONTROL_ATTR_NAME = 'ReviewManagerControl';\nconst POSITION_BELOW = 2; //above=1, below=2, exact=0\n\n\ninterface EditorElements {\n    cancel: HTMLButtonElement;\n    confirm: HTMLButtonElement;\n    root: HTMLSpanElement\n    textarea: HTMLTextAreaElement;\n}\n\ninterface InlineToolbarElements {\n    add: HTMLSpanElement;\n    edit: HTMLSpanElement;\n    remove: HTMLSpanElement;\n    root: HTMLDivElement;\n}\ninterface RenderStoreItem {\n    viewZoneId: string, renderStatus: ReviewCommentRenderState\n}\n\nexport class ReviewManager {\n    currentUser: string;\n    editor: monacoEditor.editor.IStandaloneCodeEditor;\n    editorConfig: monacoEditor.editor.IEditorOptions;\n    events: ReviewCommentEvent[];\n    store: ReviewCommentStore;\n    activeComment?: ReviewComment;\n    widgetInlineToolbar: monacoEditor.editor.IContentWidget;\n    widgetInlineCommentEditor: monacoEditor.editor.IContentWidget;\n    onChange: OnActionsChanged;\n    editorMode: EditorMode;\n    config: ReviewManagerConfigPrivate;\n    currentLineDecorations: string[];\n    currentCommentDecorations: string[];\n    currentLineDecorationLineNumber?: number;\n\n    editorElements: EditorElements;\n    inlineToolbarElements: InlineToolbarElements;\n    verbose: boolean;\n    canAddCondition: monacoEditor.editor.IContextKey<boolean>;\n\n    renderStore: Record<string, RenderStoreItem>\n\n    constructor(editor: any, currentUser: string, onChange: OnActionsChanged, config?: ReviewManagerConfig, verbose?: boolean) {\n        this.currentUser = currentUser;\n        this.editor = editor;\n        this.activeComment = null; //TODO - consider moving onto the store\n        this.widgetInlineToolbar = null;\n        this.widgetInlineCommentEditor = null;\n        this.onChange = onChange;\n        this.editorMode = EditorMode.toolbar;\n        this.config = { ...defaultReviewManagerConfig, ...(config || {}) };\n        this.currentLineDecorations = [];\n        this.currentCommentDecorations = []\n        this.currentLineDecorationLineNumber = null;\n        this.events = [];\n        this.store = { comments: {} };//, viewZoneIdsToDelete: [] };\n        this.renderStore = {};\n\n        this.verbose = verbose;\n\n        this.editorConfig = this.editor.getRawOptions();\n        this.editor.onDidChangeConfiguration(() => this.editorConfig = this.editor.getRawOptions());\n        this.editor.onMouseDown(this.handleMouseDown.bind(this));\n        this.canAddCondition = this.editor.createContextKey('add-context-key', !this.config.readOnly);\n        this.inlineToolbarElements = this.createInlineToolbarWidget();\n        this.editorElements = this.createInlineEditorWidget();\n        this.addActions();\n\n        if (this.config.showAddCommentGlyph) {\n            this.editor.onMouseMove(this.handleMouseMove.bind(this));\n        }\n    }\n\n    setReadOnlyMode(value: boolean) {\n        this.config.readOnly = value;\n        this.canAddCondition.set(value);\n        this.renderAddCommentLineDecoration(null);\n    }\n\n    load(events: ReviewCommentEvent[]): void {\n        const store = reduceComments(events)\n        this.loadFromStore(store, events);\n    }\n\n    loadFromStore(store: ReviewCommentStore, events: ReviewCommentEvent[]) {\n        this.editor.changeViewZones((changeAccessor: monacoEditor.editor.IViewZoneChangeAccessor) => {\n\n            // Remove all the existing comments     \n            for (const viewState of Object.values(this.store.comments)) {\n                const x = this.getRenderState(viewState.comment.id);\n                if (x && x.viewZoneId !== null) {\n                    changeAccessor.removeZone(x.viewZoneId);\n                }\n            }\n\n            this.events = events;\n            this.store = store;\n            this.store.deletedCommentIds = null;\n            this.store.dirtyCommentIds = null;\n            this.renderStore = {};\n\n            this.refreshComments();\n\n            this.verbose && console.debug('Events Loaded:', events.length, 'Review Comments:', Object.values(this.store.comments).length);\n        })\n    }\n\n    getThemedColor(name: string): string {\n        // editor.background: e {rgba: e}\n        // editor.foreground: e {rgba: e}\n        // editor.inactiveSelectionBackground: e {rgba: e}\n        // editor.selectionHighlightBackground: e {rgba: e}\n        // editorIndentGuide.activeBackground: e {rgba: e}\n        // editorIndentGuide.background: e {rgba: e}\n        const theme = (this.editor as any)._themeService.getTheme();\n        let value = theme.getColor(name);\n\n        // HACK - Buttons themes are not in monaco ... so just hack in theme for dark\n        const missingThemes = {\n            'dark': {\n                \"button.background\": \"#0e639c\",\n                \"button.foreground\": \"#ffffff\",\n            },\n            'light': {\n                \"button.background\": \"#007acc\",\n                \"button.foreground\": \"#ffffff\"\n            }\n        }\n        if (!value) {\n            value = missingThemes[theme.themeName.indexOf('dark') > -1 ? 'dark' : 'light'][name];\n        }\n        return value;\n    }\n\n    createInlineEditButtonsElement(): InlineToolbarElements {\n        var root = document.createElement('div') as HTMLDivElement;\n        root.className = 'editButtonsContainer'\n        root.style.marginLeft = this.config.editButtonOffset;\n\n        const add = document.createElement('span') as HTMLSpanElement;\n        add.innerText = this.config.editButtonAddText;\n        add.className = 'editButton add'\n        add.setAttribute(CONTROL_ATTR_NAME, '');\n        add.onclick = () => this.setEditorMode(EditorMode.insertComment);\n        root.appendChild(add);\n\n        let remove = null;\n        let edit = null;\n        let spacer = null;\n\n        if (this.config.editButtonEnableRemove) {\n            spacer = document.createElement('div') as HTMLDivElement;\n            spacer.innerText = ' '\n            root.appendChild(spacer);\n\n            remove = document.createElement('span') as HTMLSpanElement;\n            remove.setAttribute(CONTROL_ATTR_NAME, '');\n            remove.innerText = this.config.editButtonRemoveText;\n            remove.className = 'editButton remove'\n            remove.onclick = () => this.activeComment && this.removeComment(this.activeComment.id);\n            root.appendChild(remove);\n        }\n\n        if (this.config.editButtonEnableEdit) {\n            spacer = document.createElement('div') as HTMLDivElement;\n            spacer.innerText = ' '\n            root.appendChild(spacer);\n\n            edit = document.createElement('span') as HTMLSpanElement;\n            edit.setAttribute(CONTROL_ATTR_NAME, '');\n            edit.innerText = this.config.editButtonEditText;\n            edit.className = 'editButton edit'\n            edit.onclick = () => this.setEditorMode(EditorMode.editComment);\n            root.appendChild(edit);\n        }\n\n        return { root, add, remove, edit };\n    }\n\n    handleCancel() {\n        this.setEditorMode(EditorMode.toolbar);\n        this.editor.focus();\n    }\n\n    handleAddComment() {\n        const lineNumber = this.activeComment ? this.activeComment.lineNumber : this.editor.getSelection().endLineNumber;\n        const text = this.editorElements.textarea.value;\n        const selection = this.activeComment ? null : this.editor.getSelection() as CodeSelection;\n        this.addComment(lineNumber, text, selection);\n        this.setEditorMode(EditorMode.toolbar);\n        this.editor.focus();\n    }\n\n    handleTextAreaKeyDown(e: KeyboardEvent) {\n        if (e.code === \"Escape\") {\n            this.handleCancel();\n            e.preventDefault();\n            console.info('preventDefault: Escape Key');\n        } else if (e.code === \"Enter\" && e.ctrlKey) {\n            this.handleAddComment();\n            e.preventDefault();\n            console.info('preventDefault: ctrl+Enter');\n        }\n    }\n\n    createInlineEditorElement(): EditorElements {\n        var root = document.createElement('span') as HTMLSpanElement;\n        root.className = \"reviewCommentEditor\"\n\n        const textarea = document.createElement('textarea') as HTMLTextAreaElement;\n        textarea.setAttribute(CONTROL_ATTR_NAME, '');\n        textarea.className = \"reviewCommentEditor text\";\n        textarea.innerText = '';\n        textarea.style.resize = \"none\";\n        textarea.name = 'text';\n        textarea.onkeydown = this.handleTextAreaKeyDown.bind(this);\n\n        const confirm = document.createElement('button') as HTMLButtonElement;\n        confirm.setAttribute(CONTROL_ATTR_NAME, '');\n        confirm.className = \"reviewCommentEditor save\";\n        confirm.style.fontFamily = \"Consolas\";\n        confirm.innerText = 'Add Comment';\n        confirm.onclick = this.handleAddComment.bind(this);\n\n        const cancel = document.createElement('button') as HTMLButtonElement;\n        cancel.setAttribute(CONTROL_ATTR_NAME, '');\n        cancel.className = \"reviewCommentEditor cancel\";\n        cancel.innerText = 'Cancel';\n        cancel.onclick = this.handleCancel.bind(this);\n\n        root.appendChild(textarea);\n        root.appendChild(cancel);\n        root.appendChild(confirm);\n\n        return { root, confirm, cancel, textarea };\n    }\n\n    createInlineToolbarWidget() {\n        const buttonsElement = this.createInlineEditButtonsElement();\n        const this_ = this;\n\n        this.widgetInlineToolbar = {\n            allowEditorOverflow: true,\n            getId: () => {\n                return 'widgetInlineToolbar';\n            },\n            getDomNode: () => {\n                return buttonsElement.root;\n            },\n            getPosition: () => {\n                if (this_.activeComment && this_.editorMode == EditorMode.toolbar && !this_.config.readOnly) {\n                    return {\n                        position: {\n                            lineNumber: this_.activeComment.lineNumber,\n                            column: 1\n                        },\n                        preference: [POSITION_BELOW]\n                    }\n                }\n            }\n        };\n\n        this.editor.addContentWidget(this.widgetInlineToolbar);\n        return buttonsElement;\n    }\n\n    createInlineEditorWidget(): EditorElements {\n        // doesn't re-theme when\n        const editorElement = this.createInlineEditorElement();\n\n        this.widgetInlineCommentEditor = {\n            allowEditorOverflow: true,\n            getId: () => {\n                return 'widgetInlineEditor';\n            },\n            getDomNode: () => {\n                return editorElement.root;\n            },\n            getPosition: () => {\n                if (this.editorMode == EditorMode.insertComment || this.editorMode == EditorMode.editComment) {\n                    return {\n                        position: {\n                            lineNumber: this.activeComment ? this.activeComment.lineNumber : this.editor.getPosition().lineNumber + 1,\n                            column: 1\n                        },\n                        preference: [POSITION_BELOW]\n                    }\n                }\n            }\n        };\n\n        this.editor.addContentWidget(this.widgetInlineCommentEditor);\n        return editorElement;\n    }\n\n    setActiveComment(comment: ReviewComment) {\n        this.verbose && console.debug('setActiveComment', comment);\n\n        const lineNumbersToMakeDirty = [];\n        if (this.activeComment && (!comment || this.activeComment.lineNumber !== comment.lineNumber)) {\n            lineNumbersToMakeDirty.push(this.activeComment.lineNumber);\n        }\n        if (comment) {\n            lineNumbersToMakeDirty.push(comment.lineNumber);\n        }\n\n        this.activeComment = comment;\n        if (lineNumbersToMakeDirty.length > 0) {\n            this.filterAndMapComments(lineNumbersToMakeDirty, (comment) => {\n                this.renderStore[comment.id].renderStatus = ReviewCommentRenderState.dirty\n\n            });\n        }\n    }\n\n    filterAndMapComments(lineNumbers: number[], fn: { (comment: ReviewComment): void }) {\n        for (const cs of Object.values(this.store.comments)) {\n            if (lineNumbers.indexOf(cs.comment.lineNumber) > -1) {\n                fn(cs.comment);\n            }\n        }\n    }\n\n    handleMouseMove(ev: monacoEditor.editor.IEditorMouseEvent) {\n        if (ev.target && ev.target.position && ev.target.position.lineNumber) {\n            this.currentLineDecorationLineNumber = ev.target.position.lineNumber;\n            this.renderAddCommentLineDecoration(this.config.readOnly ? null : this.currentLineDecorationLineNumber);\n        }\n    }\n\n    renderAddCommentLineDecoration(lineNumber?: number) {\n        const lines = lineNumber ? [\n            {\n                range: new monacoWindow.monaco.Range(lineNumber, 0, lineNumber, 0),\n                options: {\n                    marginClassName: 'activeLineMarginClass',\n                    zIndex: 100\n                }\n            }\n        ] : [];\n        this.currentLineDecorations = this.editor.deltaDecorations(this.currentLineDecorations, lines);\n    }\n\n    handleMouseDown(ev: { target: { element: { className: string, hasAttribute: { (string): boolean } }, detail: any } }) {\n        // Not ideal - but couldn't figure out a different way to identify the glyph event        \n        if (ev.target.element.className && ev.target.element.className.indexOf('activeLineMarginClass') > -1) {\n            this.editor.setPosition({\n                lineNumber: this.currentLineDecorationLineNumber,\n                column: 1\n            });\n            this.setEditorMode(EditorMode.insertComment);\n        } else if (!ev.target.element.hasAttribute(CONTROL_ATTR_NAME)) {\n            let activeComment: ReviewComment = null;\n\n            if (ev.target.detail && ev.target.detail.viewZoneId !== null) {\n                for (const comment of Object.values(this.store.comments).map(c => c.comment)) {\n                    const x = this.getRenderState(comment.id);\n                    if (x.viewZoneId == ev.target.detail.viewZoneId) {\n                        activeComment = comment;\n                        break;\n                    }\n                }\n            }\n            this.setActiveComment(activeComment);\n            this.refreshComments();\n            this.setEditorMode(EditorMode.toolbar);\n        }\n    }\n\n    private calculateMarginTopOffset(includeActiveCommentHeight: boolean): number {\n        let count = 0;\n        let marginTop = 0;\n        const lineHeight = this.editorConfig.lineHeight;\n\n        if (this.activeComment) {\n            for (var item of this.iterateComments()) {\n                if (item.state.comment.lineNumber === this.activeComment.lineNumber &&\n                    (item.state.comment != this.activeComment || includeActiveCommentHeight)) {\n                    count += this.calculateNumberOfLines(item.state.comment.text);\n                }\n\n                if (item.state.comment == this.activeComment) {\n                    break;\n                }\n            }\n            marginTop = count * lineHeight;\n        }\n        const result = marginTop + this.config.verticalOffset;\n        return result;\n    }\n\n    layoutInlineToolbar() {\n        this.inlineToolbarElements.root.style.backgroundColor = this.getThemedColor(\"editor.background\");\n        this.inlineToolbarElements.root.style.marginTop = `${this.calculateMarginTopOffset(false)}px`;\n\n        if (this.inlineToolbarElements.remove) {\n            const hasChildren = this.activeComment && this.iterateComments((c) => c.comment.id === this.activeComment.id).length > 1\n            const isSameUser = this.activeComment && this.activeComment.author === this.currentUser;\n            this.inlineToolbarElements.remove.style.display = hasChildren ? 'none' : '';\n            this.inlineToolbarElements.edit.style.display = hasChildren || !isSameUser ? 'none' : '';\n        }\n\n        this.editor.layoutContentWidget(this.widgetInlineToolbar);\n    }\n\n    layoutInlineCommentEditor() {\n        [this.editorElements.root, this.editorElements.textarea].forEach(e => {\n            e.style.backgroundColor = this.getThemedColor(\"editor.background\");\n            e.style.color = this.getThemedColor(\"editor.foreground\");\n        });\n\n        [this.editorElements.confirm, this.editorElements.cancel]\n            .forEach((button) => {\n                button.style.backgroundColor = this.getThemedColor(\"button.background\");\n                button.style.color = this.getThemedColor(\"button.foreground\");\n            });\n\n        this.editorElements.confirm.innerText = this.editorMode === EditorMode.insertComment ? \"Add Comment\" : \"Edit Comment\";\n        this.editorElements.root.style.marginTop = `${this.calculateMarginTopOffset(true)}px`;\n\n        this.editor.layoutContentWidget(this.widgetInlineCommentEditor);\n    }\n\n    setEditorMode(mode: EditorMode) {\n        this.editorMode = this.config.readOnly ? EditorMode.toolbar : mode;\n        console.warn('setEditorMode', EditorMode[mode],\n            'Comment:', this.activeComment,\n            'ReadOnly:', this.config.readOnly,\n            'Result:', EditorMode[this.editorMode]);\n\n        this.layoutInlineCommentEditor();\n        this.layoutInlineToolbar();\n\n        if (mode == EditorMode.insertComment || mode == EditorMode.editComment) {\n            if (mode == EditorMode.insertComment) {\n                this.editorElements.textarea.value = \"\";\n            } else if (mode == EditorMode.editComment) {\n                this.editorElements.textarea.value = this.activeComment ? this.activeComment.text : '';\n            }\n            //HACK - because the event in monaco doesn't have preventdefault which means editor takes focus back...                        \n            setTimeout(() => this.editorElements.textarea.focus(), 100);//TODO - make configurable\n        }\n    }\n\n    getDateTimeNow() {\n        return new Date();\n    }\n\n    private recurseComments(allComments: { [key: string]: ReviewCommentState }, filterFn: { (c: ReviewCommentState): boolean }, depth: number, results: ReviewCommentIterItem[]) {\n        const comments = Object.values(allComments).filter(filterFn);\n        for (const cs of comments) {\n            const comment = cs.comment;\n            delete allComments[comment.id];\n\n            results.push({\n                depth,\n                state: cs\n            });\n            this.recurseComments(allComments,\n                (x) => x.comment.parentId === comment.id,\n                depth + 1,\n                results);\n        }\n    }\n\n    private iterateComments(filterFn?: { (c: ReviewCommentState): boolean }) {\n        if (!filterFn) {\n            filterFn = (cs: ReviewCommentState) => !cs.comment.parentId;\n        }\n        const copyCommentState = { ...this.store.comments };\n        const results: ReviewCommentIterItem[] = [];\n        this.recurseComments(copyCommentState, filterFn, 0, results);\n        return results;\n    }\n\n    removeComment(id: string) {\n        return this.addEvent({ type: \"delete\", targetId: id });\n    }\n\n    addComment(lineNumber: number, text: string, selection?: CodeSelection) {\n        const event: ReviewCommentEvent = this.editorMode === EditorMode.editComment ?\n            { type: \"edit\", text, targetId: this.activeComment.id }\n            : { type: \"create\", text, lineNumber, selection, targetId: this.activeComment && this.activeComment.id };\n\n        return this.addEvent(event);\n    }\n\n    private addEvent(event: ReviewCommentEvent) {\n        event.createdBy = this.currentUser;\n        event.createdAt = this.getDateTimeNow();\n        event.id = uuid();\n\n        this.events.push(event);\n        this.store = commentReducer(event, this.store);\n\n        if (this.activeComment && !this.store.comments[this.activeComment.id]) {\n            this.setActiveComment(null);\n        } else if (this.activeComment && this.activeComment.status === ReviewCommentStatus.deleted) {\n            this.setActiveComment(null);\n        }\n\n        this.refreshComments()\n        this.layoutInlineToolbar();\n\n        if (this.onChange) {\n            this.onChange(this.events);\n        }\n\n        return event;\n    }\n\n    private formatDate(dt: Date | string) {\n        if (this.config.formatDate) {\n            return this.config.formatDate(dt)\n        } else if (dt instanceof Date) {\n            return dt.toISOString();\n        } else {\n            return dt;\n        }\n    }\n\n    private createElement(text: string, className: string, tagName: string = null) {\n        const span = document.createElement(tagName || 'span') as HTMLSpanElement;\n        span.className = className;\n        span.innerText = text;\n        return span;\n    }\n\n    getRenderState(commentId: string): RenderStoreItem {\n        if (!this.renderStore[commentId]) {\n            this.renderStore[commentId] = { viewZoneId: null, renderStatus: null };\n        }\n        return this.renderStore[commentId];\n    }\n\n    refreshComments() {\n        this.editor.changeViewZones((changeAccessor: {\n            addZone: { (zone: { afterLineNumber: number, heightInLines: number, domNode: HTMLElement, suppressMouseDown: boolean }): string },\n            removeZone: { (id: string): void }\n        }) => {\n            const lineNumbers: { [key: number]: CodeSelection } = {};\n\n            for (const cid of Array.from(this.store.deletedCommentIds || [])) {\n                const viewZoneId = this.renderStore[cid]?.viewZoneId;\n                changeAccessor.removeZone(viewZoneId);\n                this.verbose && console.debug('Zone.Delete', viewZoneId);\n            }\n            this.store.deletedCommentIds = null;\n\n            for (const cid of Array.from(this.store.dirtyCommentIds || [])) {\n                this.getRenderState(cid).renderStatus = ReviewCommentRenderState.dirty;\n            }\n            this.store.dirtyCommentIds = null;\n\n            for (const item of this.iterateComments()) {\n                const x = this.getRenderState(item.state.comment.id);\n\n                if (x.renderStatus === ReviewCommentRenderState.hidden) {\n                    this.verbose && console.debug('Zone.Hidden', item.state.comment.id);\n\n                    changeAccessor.removeZone(x.viewZoneId);\n                    x.viewZoneId = null;\n\n                    continue;\n                }\n\n                if (x.renderStatus === ReviewCommentRenderState.dirty) {\n                    this.verbose && console.debug('Zone.Dirty', item.state.comment.id);\n\n                    changeAccessor.removeZone(x.viewZoneId);\n                    x.viewZoneId = null;\n                    x.renderStatus = ReviewCommentRenderState.normal;\n                }\n\n                if (!lineNumbers[item.state.comment.lineNumber]) {\n                    lineNumbers[item.state.comment.lineNumber] = item.state.comment.selection;\n                }\n\n                if (x.viewZoneId == null) {\n                    this.verbose && console.debug('Zone.Create', item.state.comment.id);\n\n                    const isActive = this.activeComment == item.state.comment;\n\n                    const domNode = this.createElement(\"\", `reviewComment ${isActive ? 'active' : ' inactive'}`);\n                    domNode.style.marginLeft = (this.config.commentIndent * (item.depth + 1)) + this.config.commentIndentOffset + \"px\";\n                    domNode.style.backgroundColor = this.getThemedColor(\"editor.selectionHighlightBackground\");\n\n                    // For Debug - domNode.appendChild(this.createElement(`${item.state.comment.id}`, 'reviewComment id'))\n\n                    domNode.appendChild(this.createElement(`${item.state.comment.author || ' '} at `, 'reviewComment author'));\n                    domNode.appendChild(this.createElement(this.formatDate(item.state.comment.dt), 'reviewComment dt'))\n                    if (item.state.history.length > 1) {\n                        domNode.appendChild(this.createElement(`(Edited ${item.state.history.length - 1} times)`, 'reviewComment history'))\n                    }\n                    domNode.appendChild(this.createElement(`${item.state.comment.text}`, 'reviewComment text', 'div'))\n\n                    x.viewZoneId = changeAccessor.addZone({\n                        afterLineNumber: item.state.comment.lineNumber,\n                        heightInLines: this.calculateNumberOfLines(item.state.comment.text),\n                        domNode: domNode,\n                        suppressMouseDown: true // This stops focus being lost the editor - meaning keyboard shortcuts keeps working\n                    });\n                }\n            }\n\n            if (this.config.showInRuler) {\n                const decorators = [];\n                for (const [ln, selection] of Object.entries(lineNumbers)) {\n\n                    decorators.push({\n                        range: new monacoWindow.monaco.Range(ln, 0, ln, 0),\n                        options: {\n                            isWholeLine: true,\n                            overviewRuler: {\n                                color: this.config.rulerMarkerColor,\n                                darkColor: this.config.rulerMarkerDarkColor,\n                                position: 1\n                            }\n                        }\n                    })\n\n                    if (selection) {\n                        decorators.push({\n                            range: new monacoWindow.monaco.Range(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn),\n                            options: {\n                                className: 'reviewComment selection',\n                            }\n                        })\n                    }\n                }\n\n                this.currentCommentDecorations = this.editor.deltaDecorations(this.currentCommentDecorations, decorators);\n            }\n        });\n    }\n\n    calculateNumberOfLines(text: string): number {\n        return text ? text.split(/\\r*\\n/).length + 1 : 1;\n    }\n\n    addActions() {\n        this.editor.addAction({\n            id: 'my-unique-id-add',\n            label: 'Add Comment',\n            keybindings: [\n                monacoWindow.monaco.KeyMod.CtrlCmd | monacoWindow.monaco.KeyCode.F10,\n            ],\n            precondition: 'add-context-key',\n            keybindingContext: null,\n            contextMenuGroupId: 'navigation',\n            contextMenuOrder: 0,\n\n            run: () => {\n                this.setEditorMode(EditorMode.insertComment);\n            }\n        });\n\n        this.editor.addAction({\n            id: 'my-unique-id-next',\n            label: 'Next Comment',\n            keybindings: [\n                monacoWindow.monaco.KeyMod.CtrlCmd | monacoWindow.monaco.KeyCode.F12,\n            ],\n            precondition: null,\n            keybindingContext: null,\n            contextMenuGroupId: 'navigation',\n            contextMenuOrder: 0.101,\n\n            run: () => {\n                this.navigateToComment(NavigationDirection.next);\n            }\n        });\n\n        this.editor.addAction({\n            id: 'my-unique-id-prev',\n            label: 'Prev Comment',\n            keybindings: [\n                monacoWindow.monaco.KeyMod.CtrlCmd | monacoWindow.monaco.KeyCode.F11,\n            ],\n            precondition: null,\n            keybindingContext: null,\n            contextMenuGroupId: 'navigation',\n            contextMenuOrder: 0.102,\n\n            run: () => {\n                this.navigateToComment(NavigationDirection.prev);\n            }\n        });\n    }\n\n    navigateToComment(direction: NavigationDirection) {\n        let currentLine = 0;\n        if (this.activeComment) {\n            currentLine = this.activeComment.lineNumber;\n        } else {\n            currentLine = this.editor.getPosition().lineNumber;\n        }\n\n        const comments = Object.values(this.store.comments).map(cs => cs.comment).filter((c) => {\n            if (!c.parentId) {\n                if (direction === NavigationDirection.next) {\n                    return c.lineNumber > currentLine;\n                } else if (direction === NavigationDirection.prev) {\n                    return c.lineNumber < currentLine;\n                }\n            }\n        });\n\n        if (comments.length) {\n            comments.sort((a, b) => {\n                if (direction === NavigationDirection.next) {\n                    return a.lineNumber - b.lineNumber;\n                } else if (direction === NavigationDirection.prev) {\n                    return b.lineNumber - a.lineNumber;\n                }\n            });\n\n            const comment = comments[0];\n            this.setActiveComment(comment)\n            this.refreshComments();\n            this.layoutInlineToolbar();\n            this.editor.revealLineInCenter(comment.lineNumber);\n        }\n    }\n}\n\n\n","import * as uuid from \"uuid/v4\";\n\nexport type CommonFields = {\n  id?: string;\n  targetId?: string;\n  createdBy?: string;\n  createdAt?: Date | string;\n  // script on here maybe?\n};\n\nexport type ReviewCommentEvent =\n  | ({\n      type: \"create\";\n      lineNumber: number;\n      text: string;\n      selection?: CodeSelection;\n    } & CommonFields)\n  | ({ type: \"edit\"; text: string } & CommonFields)\n  | ({ type: \"delete\" } & CommonFields);\n\nexport interface CommentState {\n  comments: Record<string, ReviewCommentState>;\n  deletedCommentIds?: Set<string>;\n  dirtyCommentIds?: Set<string>;\n}\n\nexport function commentReducer(event: ReviewCommentEvent, state: CommentState) {\n  const dirtyLineNumbers = new Set<number>();\n  const deletedCommentIds = new Set<string>();\n  const dirtyCommentIds = new Set<string>();\n  let comments = { ...state.comments };\n\n  switch (event.type) {\n    case \"edit\":\n      const parent = comments[event.targetId];\n      if (!parent) break;\n\n      const edit: ReviewCommentState = {\n        comment: {\n          ...parent.comment,\n          author: event.createdBy,\n          dt: event.createdAt,\n          text: event.text\n        },\n        history: parent.history.concat(parent.comment)\n      };\n\n      dirtyLineNumbers.add(edit.comment.lineNumber);\n      console.debug(\"edit\", event);\n\n      comments[event.targetId] = edit;\n      break;\n\n    case \"delete\":\n      const selected = comments[event.targetId];\n      if (!selected) break;\n\n      delete comments[event.targetId];\n\n      deletedCommentIds.add(selected.comment.id);\n      dirtyLineNumbers.add(selected.comment.lineNumber);\n      console.debug(\"delete\", event);\n      break;\n\n    case \"create\":\n      if (!comments[event.id]) {\n        comments[event.id] = new ReviewCommentState({\n          author: event.createdBy,\n          dt: event.createdAt,\n          id: event.id,\n          lineNumber: event.lineNumber,\n          selection: event.selection,\n          text: event.text,\n          parentId: event.targetId,\n          status: ReviewCommentStatus.active\n        });\n        console.debug(\"insert\", event);\n        dirtyLineNumbers.add(event.lineNumber);\n      }\n      break;\n  }\n\n  if (dirtyLineNumbers.size) {\n    for (const cs of Object.values(state.comments)) {\n      if (dirtyLineNumbers.has(cs.comment.lineNumber)) {\n        dirtyCommentIds.add(cs.comment.id);\n      }\n    }\n  }\n\n  return { comments, dirtyCommentIds, deletedCommentIds };\n}\n\nexport class ReviewCommentState {\n  comment: ReviewComment;\n  history: ReviewComment[];\n\n  constructor(comment: ReviewComment) {\n    this.comment = comment;\n    this.history = [comment];\n  }\n}\n\nexport enum ReviewCommentRenderState {\n  dirty = 1,\n  hidden = 2,\n  normal = 3\n}\n\nexport interface CodeSelection {\n  startColumn: number;\n  endColumn: number;\n  startLineNumber: number;\n  endLineNumber: number;\n}\n\nexport interface ReviewComment {\n  id: string;\n  parentId?: string;\n  author: string;\n  dt: Date | string;\n  lineNumber: number;\n  text: string;\n  selection: CodeSelection;\n  status: ReviewCommentStatus;\n}\n\nexport enum ReviewCommentStatus {\n  active = 1,\n  deleted = 2,\n  edit = 3\n}\n\nexport function reduceComments(\n  actions: ReviewCommentEvent[],\n  state: CommentState = null\n) {\n  state = state || { comments: {} };\n\n  for (const a of actions) {\n    if (!a.id) {\n      a.id = uuid();\n    }\n    state = commentReducer(a, state);\n  }\n\n  return state;\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n"],"sourceRoot":""}