{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/uuid/v4.js","webpack:///./src/index.ts","webpack:///./src/events-comments-reducers.ts","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rng","bytesToUuid","options","buf","offset","Array","rnds","random","ii","reduceComments","NavigationDirection","EditorMode","monacoWindow","window","editor","currentUser","actions","onChange","config","verbose","rm","ReviewManager","load","defaultReviewManagerConfig","commentIndent","commentIndentOffset","editButtonAddText","editButtonEditText","editButtonEnableEdit","editButtonEnableRemove","editButtonOffset","editButtonRemoveText","formatDate","readOnly","rulerMarkerColor","rulerMarkerDarkColor","showAddCommentGlyph","showInRuler","verticalOffset","this","activeComment","widgetInlineToolbar","widgetInlineCommentEditor","editorMode","toolbar","currentLineDecorations","currentCommentDecorations","currentLineDecorationLineNumber","events","store","comments","renderStore","editorConfig","getRawOptions","onDidChangeConfiguration","onMouseDown","handleMouseDown","canAddCondition","createContextKey","inlineToolbarElements","createInlineToolbarWidget","editorElements","createInlineEditorWidget","addActions","onMouseMove","handleMouseMove","setReadOnlyMode","set","renderAddCommentLineDecoration","loadFromStore","changeViewZones","changeAccessor","values","viewState","x","getRenderState","comment","id","viewZoneId","removeZone","deletedCommentIds","dirtyCommentIds","refreshComments","console","debug","length","getThemedColor","theme","_themeService","getTheme","getColor","dark","light","themeName","indexOf","createInlineEditButtonsElement","root","document","createElement","className","style","marginLeft","add","innerText","setAttribute","onclick","setEditorMode","insertComment","appendChild","remove","edit","spacer","removeComment","editComment","handleCancel","focus","handleAddComment","lineNumber","getSelection","endLineNumber","text","textarea","selection","addComment","handleTextAreaKeyDown","e","code","preventDefault","info","ctrlKey","createInlineEditorElement","resize","onkeydown","confirm","fontFamily","cancel","buttonsElement","this_","allowEditorOverflow","getId","getDomNode","getPosition","position","column","preference","addContentWidget","editorElement","setActiveComment","lineNumbersToMakeDirty","push","filterAndMapComments","renderStatus","ReviewCommentRenderState","dirty","lineNumbers","fn","cs","ev","target","lines","range","monaco","Range","marginClassName","zIndex","deltaDecorations","element","setPosition","hasAttribute","detail","map","calculateMarginTopOffset","includeActiveCommentHeight","count","marginTop","lineHeight","iterateComments","item","state","calculateNumberOfLines","layoutInlineToolbar","backgroundColor","hasChildren","isSameUser","author","display","layoutContentWidget","layoutInlineCommentEditor","forEach","color","button","warn","setTimeout","getDateTimeNow","Date","recurseComments","allComments","filterFn","depth","results","filter","parentId","copyCommentState","addEvent","type","targetId","event","createdBy","createdAt","uuid","commentReducer","status","ReviewCommentStatus","deleted","dt","toISOString","tagName","span","commentId","from","cid","rs","hidden","normal","isActive","domNode","history","addZone","afterLineNumber","heightInLines","suppressMouseDown","decorators","entries","ln","isWholeLine","overviewRuler","darkColor","startLineNumber","startColumn","endColumn","split","addAction","label","keybindings","KeyMod","CtrlCmd","KeyCode","F10","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","F12","navigateToComment","next","F11","prev","direction","currentLine","sort","a","b","revealLineInCenter","dirtyLineNumbers","Set","concat","selected","ReviewCommentState","active","size","has","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","Math","byteToHex","toString","substr","bth","join"],"mappings":"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","file":"index-commonjs-es5.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import * as monacoEditor from \"monaco-editor\";\nimport {\n  reduceComments,\n  ReviewCommentStatus,\n  commentReducer,\n  CodeSelection,\n  CommentState as ReviewCommentStore,\n  ReviewCommentState,\n  ReviewCommentEvent,\n  ReviewComment,\n  ReviewCommentRenderState\n} from \"./events-comments-reducers\";\nimport * as uuid from \"uuid/v4\";\nexport { ReviewCommentStore, ReviewCommentEvent, reduceComments };\n\ninterface MonacoWindow {\n  monaco: any;\n}\n\nconst monacoWindow = (window as any) as MonacoWindow;\n\nenum NavigationDirection {\n  next = 1,\n  prev = 2\n}\n\nexport enum EditorMode {\n  insertComment = 1,\n  editComment = 2,\n  toolbar = 3\n}\n\nexport function createReviewManager(\n  editor: any,\n  currentUser: string,\n  actions?: ReviewCommentEvent[],\n  onChange?: OnActionsChanged,\n  config?: ReviewManagerConfig,\n  verbose?: boolean\n): ReviewManager {\n  //For Debug: (window as any).editor = editor;\n  const rm = new ReviewManager(editor, currentUser, onChange, config, verbose);\n  rm.load(actions || []);\n  return rm;\n}\n\ninterface ReviewCommentIterItem {\n  depth: number;\n  state: ReviewCommentState;\n}\n\ninterface OnActionsChanged {\n  (actions: ReviewCommentEvent[]): void;\n}\n\nexport interface ReviewManagerConfig {\n  commentIndent?: number;\n  commentIndentOffset?: number;\n  editButtonAddText?: string;\n  editButtonEnableRemove?: boolean;\n  editButtonOffset?: string;\n  editButtonRemoveText?: string;\n  formatDate?: { (dt: Date): string };\n  readOnly?: boolean;\n  reviewCommentIconActive?: string;\n  reviewCommentIconSelect?: string;\n  showInRuler?: boolean;\n  verticalOffset?: number;\n}\n\ninterface ReviewManagerConfigPrivate {\n  commentIndent: number;\n  commentIndentOffset: number;\n  editButtonAddText: string;\n  editButtonEditText: string;\n  editButtonEnableEdit: boolean;\n  editButtonEnableRemove: boolean;\n  editButtonOffset: string;\n  editButtonRemoveText: string;\n  formatDate?: { (dt: Date | string): string };\n  readOnly: boolean;\n  rulerMarkerColor: any;\n  rulerMarkerDarkColor: any;\n  showAddCommentGlyph: boolean;\n  showInRuler: boolean;\n  verticalOffset: number;\n}\n\nconst defaultReviewManagerConfig: ReviewManagerConfigPrivate = {\n  commentIndent: 20,\n  commentIndentOffset: 20,\n  editButtonAddText: \"Reply\",\n  editButtonEditText: \"Edit\",\n  editButtonEnableEdit: true,\n  editButtonEnableRemove: true,\n  editButtonOffset: \"-10px\",\n  editButtonRemoveText: \"Remove\",\n  formatDate: null,\n  readOnly: false,\n  rulerMarkerColor: \"darkorange\",\n  rulerMarkerDarkColor: \"darkorange\",\n  showAddCommentGlyph: true,\n  showInRuler: true,\n  verticalOffset: 0\n};\n\nconst CONTROL_ATTR_NAME = \"ReviewManagerControl\";\nconst POSITION_BELOW = 2; //above=1, below=2, exact=0\n\ninterface EditorElements {\n  cancel: HTMLButtonElement;\n  confirm: HTMLButtonElement;\n  root: HTMLSpanElement;\n  textarea: HTMLTextAreaElement;\n}\n\ninterface InlineToolbarElements {\n  add: HTMLSpanElement;\n  edit: HTMLSpanElement;\n  remove: HTMLSpanElement;\n  root: HTMLDivElement;\n}\ninterface RenderStoreItem {\n  viewZoneId: string;\n  renderStatus: ReviewCommentRenderState;\n}\n\nexport class ReviewManager {\n  currentUser: string;\n  editor: monacoEditor.editor.IStandaloneCodeEditor;\n  editorConfig: monacoEditor.editor.IEditorOptions;\n  events: ReviewCommentEvent[];\n  store: ReviewCommentStore;\n  activeComment?: ReviewComment;\n  widgetInlineToolbar: monacoEditor.editor.IContentWidget;\n  widgetInlineCommentEditor: monacoEditor.editor.IContentWidget;\n  onChange: OnActionsChanged;\n  editorMode: EditorMode;\n  config: ReviewManagerConfigPrivate;\n  currentLineDecorations: string[];\n  currentCommentDecorations: string[];\n  currentLineDecorationLineNumber?: number;\n\n  editorElements: EditorElements;\n  inlineToolbarElements: InlineToolbarElements;\n  verbose: boolean;\n  canAddCondition: monacoEditor.editor.IContextKey<boolean>;\n\n  renderStore: Record<string, RenderStoreItem>;\n\n  constructor(\n    editor: any,\n    currentUser: string,\n    onChange: OnActionsChanged,\n    config?: ReviewManagerConfig,\n    verbose?: boolean\n  ) {\n    this.currentUser = currentUser;\n    this.editor = editor;\n    this.activeComment = null; //TODO - consider moving onto the store\n    this.widgetInlineToolbar = null;\n    this.widgetInlineCommentEditor = null;\n    this.onChange = onChange;\n    this.editorMode = EditorMode.toolbar;\n    this.config = { ...defaultReviewManagerConfig, ...(config || {}) };\n    this.currentLineDecorations = [];\n    this.currentCommentDecorations = [];\n    this.currentLineDecorationLineNumber = null;\n    this.events = [];\n    this.store = { comments: {} }; //, viewZoneIdsToDelete: [] };\n    this.renderStore = {};\n\n    this.verbose = verbose;\n\n    this.editorConfig = this.editor.getRawOptions();\n    this.editor.onDidChangeConfiguration(\n      () => (this.editorConfig = this.editor.getRawOptions())\n    );\n    this.editor.onMouseDown(this.handleMouseDown.bind(this));\n    this.canAddCondition = this.editor.createContextKey(\n      \"add-context-key\",\n      !this.config.readOnly\n    );\n    this.inlineToolbarElements = this.createInlineToolbarWidget();\n    this.editorElements = this.createInlineEditorWidget();\n    this.addActions();\n\n    if (this.config.showAddCommentGlyph) {\n      this.editor.onMouseMove(this.handleMouseMove.bind(this));\n    }\n  }\n\n  setReadOnlyMode(value: boolean) {\n    this.config.readOnly = value;\n    this.canAddCondition.set(value);\n    this.renderAddCommentLineDecoration(null);\n  }\n\n  load(events: ReviewCommentEvent[]): void {\n    const store = reduceComments(events);\n    this.loadFromStore(store, events);\n  }\n\n  loadFromStore(store: ReviewCommentStore, events: ReviewCommentEvent[]) {\n    this.editor.changeViewZones(\n      (changeAccessor: monacoEditor.editor.IViewZoneChangeAccessor) => {\n        // Remove all the existing comments\n        for (const viewState of Object.values(this.store.comments)) {\n          const x = this.getRenderState(viewState.comment.id);\n          if (x && x.viewZoneId !== null) {\n            changeAccessor.removeZone(x.viewZoneId);\n          }\n        }\n\n        this.events = events;\n        this.store = store;\n        this.store.deletedCommentIds = null;\n        this.store.dirtyCommentIds = null;\n        this.renderStore = {};\n\n        this.refreshComments();\n\n        this.verbose &&\n          console.debug(\n            \"Events Loaded:\",\n            events.length,\n            \"Review Comments:\",\n            Object.values(this.store.comments).length\n          );\n      }\n    );\n  }\n\n  getThemedColor(name: string): string {\n    // editor.background: e {rgba: e}\n    // editor.foreground: e {rgba: e}\n    // editor.inactiveSelectionBackground: e {rgba: e}\n    // editor.selectionHighlightBackground: e {rgba: e}\n    // editorIndentGuide.activeBackground: e {rgba: e}\n    // editorIndentGuide.background: e {rgba: e}\n    const theme = (this.editor as any)._themeService.getTheme();\n    let value = theme.getColor(name);\n\n    // HACK - Buttons themes are not in monaco ... so just hack in theme for dark\n    const missingThemes = {\n      dark: {\n        \"button.background\": \"#0e639c\",\n        \"button.foreground\": \"#ffffff\"\n      },\n      light: {\n        \"button.background\": \"#007acc\",\n        \"button.foreground\": \"#ffffff\"\n      }\n    };\n    if (!value) {\n      value =\n        missingThemes[theme.themeName.indexOf(\"dark\") > -1 ? \"dark\" : \"light\"][\n          name\n        ];\n    }\n    return value;\n  }\n\n  createInlineEditButtonsElement(): InlineToolbarElements {\n    var root = document.createElement(\"div\") as HTMLDivElement;\n    root.className = \"editButtonsContainer\";\n    root.style.marginLeft = this.config.editButtonOffset;\n\n    const add = document.createElement(\"span\") as HTMLSpanElement;\n    add.innerText = this.config.editButtonAddText;\n    add.className = \"editButton add\";\n    add.setAttribute(CONTROL_ATTR_NAME, \"\");\n    add.onclick = () => this.setEditorMode(EditorMode.insertComment);\n    root.appendChild(add);\n\n    let remove = null;\n    let edit = null;\n    let spacer = null;\n\n    if (this.config.editButtonEnableRemove) {\n      spacer = document.createElement(\"div\") as HTMLDivElement;\n      spacer.innerText = \" \";\n      root.appendChild(spacer);\n\n      remove = document.createElement(\"span\") as HTMLSpanElement;\n      remove.setAttribute(CONTROL_ATTR_NAME, \"\");\n      remove.innerText = this.config.editButtonRemoveText;\n      remove.className = \"editButton remove\";\n      remove.onclick = () =>\n        this.activeComment && this.removeComment(this.activeComment.id);\n      root.appendChild(remove);\n    }\n\n    if (this.config.editButtonEnableEdit) {\n      spacer = document.createElement(\"div\") as HTMLDivElement;\n      spacer.innerText = \" \";\n      root.appendChild(spacer);\n\n      edit = document.createElement(\"span\") as HTMLSpanElement;\n      edit.setAttribute(CONTROL_ATTR_NAME, \"\");\n      edit.innerText = this.config.editButtonEditText;\n      edit.className = \"editButton edit\";\n      edit.onclick = () => this.setEditorMode(EditorMode.editComment);\n      root.appendChild(edit);\n    }\n\n    return { root, add, remove, edit };\n  }\n\n  handleCancel() {\n    this.setEditorMode(EditorMode.toolbar);\n    this.editor.focus();\n  }\n\n  handleAddComment() {\n    const lineNumber = this.activeComment\n      ? this.activeComment.lineNumber\n      : this.editor.getSelection().endLineNumber;\n    const text = this.editorElements.textarea.value;\n    const selection = this.activeComment\n      ? null\n      : (this.editor.getSelection() as CodeSelection);\n    this.addComment(lineNumber, text, selection);\n    this.setEditorMode(EditorMode.toolbar);\n    this.editor.focus();\n  }\n\n  handleTextAreaKeyDown(e: KeyboardEvent) {\n    if (e.code === \"Escape\") {\n      this.handleCancel();\n      e.preventDefault();\n      console.info(\"preventDefault: Escape Key\");\n    } else if (e.code === \"Enter\" && e.ctrlKey) {\n      this.handleAddComment();\n      e.preventDefault();\n      console.info(\"preventDefault: ctrl+Enter\");\n    }\n  }\n\n  createInlineEditorElement(): EditorElements {\n    var root = document.createElement(\"span\") as HTMLSpanElement;\n    root.className = \"reviewCommentEditor\";\n\n    const textarea = document.createElement(\"textarea\") as HTMLTextAreaElement;\n    textarea.setAttribute(CONTROL_ATTR_NAME, \"\");\n    textarea.className = \"reviewCommentEditor text\";\n    textarea.innerText = \"\";\n    textarea.style.resize = \"none\";\n    textarea.name = \"text\";\n    textarea.onkeydown = this.handleTextAreaKeyDown.bind(this);\n\n    const confirm = document.createElement(\"button\") as HTMLButtonElement;\n    confirm.setAttribute(CONTROL_ATTR_NAME, \"\");\n    confirm.className = \"reviewCommentEditor save\";\n    confirm.style.fontFamily = \"Consolas\";\n    confirm.innerText = \"Add Comment\";\n    confirm.onclick = this.handleAddComment.bind(this);\n\n    const cancel = document.createElement(\"button\") as HTMLButtonElement;\n    cancel.setAttribute(CONTROL_ATTR_NAME, \"\");\n    cancel.className = \"reviewCommentEditor cancel\";\n    cancel.innerText = \"Cancel\";\n    cancel.onclick = this.handleCancel.bind(this);\n\n    root.appendChild(textarea);\n    root.appendChild(cancel);\n    root.appendChild(confirm);\n\n    return { root, confirm, cancel, textarea };\n  }\n\n  createInlineToolbarWidget() {\n    const buttonsElement = this.createInlineEditButtonsElement();\n    const this_ = this;\n\n    this.widgetInlineToolbar = {\n      allowEditorOverflow: true,\n      getId: () => {\n        return \"widgetInlineToolbar\";\n      },\n      getDomNode: () => {\n        return buttonsElement.root;\n      },\n      getPosition: () => {\n        if (\n          this_.activeComment &&\n          this_.editorMode == EditorMode.toolbar &&\n          !this_.config.readOnly\n        ) {\n          return {\n            position: {\n              lineNumber: this_.activeComment.lineNumber,\n              column: 1\n            },\n            preference: [POSITION_BELOW]\n          };\n        }\n      }\n    };\n\n    this.editor.addContentWidget(this.widgetInlineToolbar);\n    return buttonsElement;\n  }\n\n  createInlineEditorWidget(): EditorElements {\n    // doesn't re-theme when\n    const editorElement = this.createInlineEditorElement();\n\n    this.widgetInlineCommentEditor = {\n      allowEditorOverflow: true,\n      getId: () => {\n        return \"widgetInlineEditor\";\n      },\n      getDomNode: () => {\n        return editorElement.root;\n      },\n      getPosition: () => {\n        if (\n          this.editorMode == EditorMode.insertComment ||\n          this.editorMode == EditorMode.editComment\n        ) {\n          return {\n            position: {\n              lineNumber: this.activeComment\n                ? this.activeComment.lineNumber\n                : this.editor.getPosition().lineNumber + 1,\n              column: 1\n            },\n            preference: [POSITION_BELOW]\n          };\n        }\n      }\n    };\n\n    this.editor.addContentWidget(this.widgetInlineCommentEditor);\n    return editorElement;\n  }\n\n  setActiveComment(comment: ReviewComment) {\n    this.verbose && console.debug(\"setActiveComment\", comment);\n\n    const lineNumbersToMakeDirty = [];\n    if (\n      this.activeComment &&\n      (!comment || this.activeComment.lineNumber !== comment.lineNumber)\n    ) {\n      lineNumbersToMakeDirty.push(this.activeComment.lineNumber);\n    }\n    if (comment) {\n      lineNumbersToMakeDirty.push(comment.lineNumber);\n    }\n\n    this.activeComment = comment;\n    if (lineNumbersToMakeDirty.length > 0) {\n      this.filterAndMapComments(lineNumbersToMakeDirty, comment => {\n        this.renderStore[comment.id].renderStatus =\n          ReviewCommentRenderState.dirty;\n      });\n    }\n  }\n\n  filterAndMapComments(\n    lineNumbers: number[],\n    fn: { (comment: ReviewComment): void }\n  ) {\n    for (const cs of Object.values(this.store.comments)) {\n      if (lineNumbers.indexOf(cs.comment.lineNumber) > -1) {\n        fn(cs.comment);\n      }\n    }\n  }\n\n  handleMouseMove(ev: monacoEditor.editor.IEditorMouseEvent) {\n    if (ev.target && ev.target.position && ev.target.position.lineNumber) {\n      this.currentLineDecorationLineNumber = ev.target.position.lineNumber;\n      this.renderAddCommentLineDecoration(\n        this.config.readOnly ? null : this.currentLineDecorationLineNumber\n      );\n    }\n  }\n\n  renderAddCommentLineDecoration(lineNumber?: number) {\n    const lines = lineNumber\n      ? [\n          {\n            range: new monacoWindow.monaco.Range(lineNumber, 0, lineNumber, 0),\n            options: {\n              marginClassName: \"activeLineMarginClass\",\n              zIndex: 100\n            }\n          }\n        ]\n      : [];\n    this.currentLineDecorations = this.editor.deltaDecorations(\n      this.currentLineDecorations,\n      lines\n    );\n  }\n\n  handleMouseDown(ev: {\n    target: {\n      element: { className: string; hasAttribute: { (string): boolean } };\n      detail: any;\n    };\n  }) {\n    // Not ideal - but couldn't figure out a different way to identify the glyph event\n    if (\n      ev.target.element.className &&\n      ev.target.element.className.indexOf(\"activeLineMarginClass\") > -1\n    ) {\n      this.editor.setPosition({\n        lineNumber: this.currentLineDecorationLineNumber,\n        column: 1\n      });\n      this.setEditorMode(EditorMode.insertComment);\n    } else if (!ev.target.element.hasAttribute(CONTROL_ATTR_NAME)) {\n      let activeComment: ReviewComment = null;\n\n      if (ev.target.detail && ev.target.detail.viewZoneId !== null) {\n        for (const comment of Object.values(this.store.comments).map(\n          c => c.comment\n        )) {\n          const x = this.getRenderState(comment.id);\n          if (x.viewZoneId == ev.target.detail.viewZoneId) {\n            activeComment = comment;\n            break;\n          }\n        }\n      }\n      this.setActiveComment(activeComment);\n      this.refreshComments();\n      this.setEditorMode(EditorMode.toolbar);\n    }\n  }\n\n  private calculateMarginTopOffset(\n    includeActiveCommentHeight: boolean\n  ): number {\n    let count = 0;\n    let marginTop = 0;\n    const lineHeight = this.editorConfig.lineHeight;\n\n    if (this.activeComment) {\n      for (var item of this.iterateComments()) {\n        if (\n          item.state.comment.lineNumber === this.activeComment.lineNumber &&\n          (item.state.comment != this.activeComment ||\n            includeActiveCommentHeight)\n        ) {\n          count += this.calculateNumberOfLines(item.state.comment.text);\n        }\n\n        if (item.state.comment == this.activeComment) {\n          break;\n        }\n      }\n      marginTop = count * lineHeight;\n    }\n    const result = marginTop + this.config.verticalOffset;\n    return result;\n  }\n\n  layoutInlineToolbar() {\n    this.inlineToolbarElements.root.style.backgroundColor = this.getThemedColor(\n      \"editor.background\"\n    );\n    this.inlineToolbarElements.root.style.marginTop = `${this.calculateMarginTopOffset(\n      false\n    )}px`;\n\n    if (this.inlineToolbarElements.remove) {\n      const hasChildren =\n        this.activeComment &&\n        this.iterateComments(c => c.comment.id === this.activeComment.id)\n          .length > 1;\n      const isSameUser =\n        this.activeComment && this.activeComment.author === this.currentUser;\n      this.inlineToolbarElements.remove.style.display = hasChildren\n        ? \"none\"\n        : \"\";\n      this.inlineToolbarElements.edit.style.display =\n        hasChildren || !isSameUser ? \"none\" : \"\";\n    }\n\n    this.editor.layoutContentWidget(this.widgetInlineToolbar);\n  }\n\n  layoutInlineCommentEditor() {\n    [this.editorElements.root, this.editorElements.textarea].forEach(e => {\n      e.style.backgroundColor = this.getThemedColor(\"editor.background\");\n      e.style.color = this.getThemedColor(\"editor.foreground\");\n    });\n\n    [this.editorElements.confirm, this.editorElements.cancel].forEach(\n      button => {\n        button.style.backgroundColor = this.getThemedColor(\"button.background\");\n        button.style.color = this.getThemedColor(\"button.foreground\");\n      }\n    );\n\n    this.editorElements.confirm.innerText =\n      this.editorMode === EditorMode.insertComment\n        ? \"Add Comment\"\n        : \"Edit Comment\";\n    this.editorElements.root.style.marginTop = `${this.calculateMarginTopOffset(\n      true\n    )}px`;\n\n    this.editor.layoutContentWidget(this.widgetInlineCommentEditor);\n  }\n\n  setEditorMode(mode: EditorMode) {\n    this.editorMode = this.config.readOnly ? EditorMode.toolbar : mode;\n    console.warn(\n      \"setEditorMode\",\n      EditorMode[mode],\n      \"Comment:\",\n      this.activeComment,\n      \"ReadOnly:\",\n      this.config.readOnly,\n      \"Result:\",\n      EditorMode[this.editorMode]\n    );\n\n    this.layoutInlineCommentEditor();\n    this.layoutInlineToolbar();\n\n    if (mode == EditorMode.insertComment || mode == EditorMode.editComment) {\n      if (mode == EditorMode.insertComment) {\n        this.editorElements.textarea.value = \"\";\n      } else if (mode == EditorMode.editComment) {\n        this.editorElements.textarea.value = this.activeComment\n          ? this.activeComment.text\n          : \"\";\n      }\n      //HACK - because the event in monaco doesn't have preventdefault which means editor takes focus back...\n      setTimeout(() => this.editorElements.textarea.focus(), 100); //TODO - make configurable\n    }\n  }\n\n  getDateTimeNow() {\n    return new Date();\n  }\n\n  private recurseComments(\n    allComments: { [key: string]: ReviewCommentState },\n    filterFn: { (c: ReviewCommentState): boolean },\n    depth: number,\n    results: ReviewCommentIterItem[]\n  ) {\n    const comments = Object.values(allComments).filter(filterFn);\n    for (const cs of comments) {\n      const comment = cs.comment;\n      delete allComments[comment.id];\n\n      results.push({\n        depth,\n        state: cs\n      });\n      this.recurseComments(\n        allComments,\n        x => x.comment.parentId === comment.id,\n        depth + 1,\n        results\n      );\n    }\n  }\n\n  private iterateComments(filterFn?: { (c: ReviewCommentState): boolean }) {\n    if (!filterFn) {\n      filterFn = (cs: ReviewCommentState) => !cs.comment.parentId;\n    }\n    const copyCommentState = { ...this.store.comments };\n    const results: ReviewCommentIterItem[] = [];\n    this.recurseComments(copyCommentState, filterFn, 0, results);\n    return results;\n  }\n\n  removeComment(id: string) {\n    return this.addEvent({ type: \"delete\", targetId: id });\n  }\n\n  addComment(lineNumber: number, text: string, selection?: CodeSelection) {\n    const event: ReviewCommentEvent =\n      this.editorMode === EditorMode.editComment\n        ? { type: \"edit\", text, targetId: this.activeComment.id }\n        : {\n            type: \"create\",\n            text,\n            lineNumber,\n            selection,\n            targetId: this.activeComment && this.activeComment.id\n          };\n\n    return this.addEvent(event);\n  }\n\n  private addEvent(event: ReviewCommentEvent) {\n    event.createdBy = this.currentUser;\n    event.createdAt = this.getDateTimeNow();\n    event.id = uuid();\n\n    this.events.push(event);\n    this.store = commentReducer(event, this.store);\n\n    if (this.activeComment && !this.store.comments[this.activeComment.id]) {\n      this.setActiveComment(null);\n    } else if (\n      this.activeComment &&\n      this.activeComment.status === ReviewCommentStatus.deleted\n    ) {\n      this.setActiveComment(null);\n    }\n\n    this.refreshComments();\n    this.layoutInlineToolbar();\n\n    if (this.onChange) {\n      this.onChange(this.events);\n    }\n\n    return event;\n  }\n\n  private formatDate(dt: Date | string) {\n    if (this.config.formatDate) {\n      return this.config.formatDate(dt);\n    } else if (dt instanceof Date) {\n      return dt.toISOString();\n    } else {\n      return dt;\n    }\n  }\n\n  private createElement(\n    text: string,\n    className: string,\n    tagName: string = null\n  ) {\n    const span = document.createElement(tagName || \"span\") as HTMLSpanElement;\n    span.className = className;\n    span.innerText = text;\n    return span;\n  }\n\n  getRenderState(commentId: string): RenderStoreItem {\n    if (!this.renderStore[commentId]) {\n      this.renderStore[commentId] = { viewZoneId: null, renderStatus: null };\n    }\n    return this.renderStore[commentId];\n  }\n\n  refreshComments() {\n    this.editor.changeViewZones(\n      (changeAccessor: {\n        addZone: {\n          (zone: {\n            afterLineNumber: number;\n            heightInLines: number;\n            domNode: HTMLElement;\n            suppressMouseDown: boolean;\n          }): string;\n        };\n        removeZone: { (id: string): void };\n      }) => {\n        const lineNumbers: { [key: number]: CodeSelection } = {};\n\n        for (const cid of Array.from(this.store.deletedCommentIds || [])) {\n          const viewZoneId = this.renderStore[cid]?.viewZoneId;\n          changeAccessor.removeZone(viewZoneId);\n          this.verbose && console.debug(\"Zone.Delete\", viewZoneId);\n        }\n        this.store.deletedCommentIds = null;\n\n        for (const cid of Array.from(this.store.dirtyCommentIds || [])) {\n          this.getRenderState(cid).renderStatus =\n            ReviewCommentRenderState.dirty;\n        }\n        this.store.dirtyCommentIds = null;\n\n        for (const item of this.iterateComments()) {\n          const rs = this.getRenderState(item.state.comment.id);\n\n          if (rs.renderStatus === ReviewCommentRenderState.hidden) {\n            this.verbose && console.debug(\"Zone.Hidden\", item.state.comment.id);\n\n            changeAccessor.removeZone(rs.viewZoneId);\n            rs.viewZoneId = null;\n\n            continue;\n          }\n\n          if (rs.renderStatus === ReviewCommentRenderState.dirty) {\n            this.verbose && console.debug(\"Zone.Dirty\", item.state.comment.id);\n\n            changeAccessor.removeZone(rs.viewZoneId);\n            rs.viewZoneId = null;\n            rs.renderStatus = ReviewCommentRenderState.normal;\n          }\n\n          if (!lineNumbers[item.state.comment.lineNumber]) {\n            lineNumbers[item.state.comment.lineNumber] =\n              item.state.comment.selection;\n          }\n\n          if (rs.viewZoneId == null) {\n            this.verbose && console.debug(\"Zone.Create\", item.state.comment.id);\n\n            const isActive = this.activeComment == item.state.comment;\n\n            const domNode = this.createElement(\n              \"\",\n              `reviewComment ${isActive ? \"active\" : \" inactive\"}`\n            );\n            domNode.style.marginLeft =\n              this.config.commentIndent * (item.depth + 1) +\n              this.config.commentIndentOffset +\n              \"px\";\n            domNode.style.backgroundColor = this.getThemedColor(\n              \"editor.selectionHighlightBackground\"\n            );\n\n            // For Debug - domNode.appendChild(this.createElement(`${item.state.comment.id}`, 'reviewComment id'))\n\n            domNode.appendChild(\n              this.createElement(\n                `${item.state.comment.author || \" \"} at `,\n                \"reviewComment author\"\n              )\n            );\n            domNode.appendChild(\n              this.createElement(\n                this.formatDate(item.state.comment.dt),\n                \"reviewComment dt\"\n              )\n            );\n            if (item.state.history.length > 1) {\n              domNode.appendChild(\n                this.createElement(\n                  `(Edited ${item.state.history.length - 1} times)`,\n                  \"reviewComment history\"\n                )\n              );\n            }\n            domNode.appendChild(\n              this.createElement(\n                `${item.state.comment.text}`,\n                \"reviewComment text\",\n                \"div\"\n              )\n            );\n            //todo jxb fixme\n            //   function getTextWidth() {\n\n            //     text = document.createElement(\"span\");\n            //     document.body.appendChild(text);\n\n            //     text.style.font = \"times new roman\";\n            //     text.style.fontSize = 16 + \"px\";\n            //     text.style.height = 'auto';\n            //     text.style.width = 'auto';\n            //     text.style.position = 'absolute';\n            //     text.style.whiteSpace = 'no-wrap';\n            //     text.innerHTML = 'Hello World';\n\n            //     width = Math.ceil(text.clientWidth);\n            //     formattedWidth = width + \"px\";\n\n            //     document.querySelector('.output').textContent\n            //             = formattedWidth;\n            //     document.body.removeChild(text);\n            // }\n            rs.viewZoneId = changeAccessor.addZone({\n              afterLineNumber: item.state.comment.lineNumber,\n              heightInLines: this.calculateNumberOfLines(\n                item.state.comment.text\n              ),\n              domNode: domNode,\n              suppressMouseDown: true // This stops focus being lost the editor - meaning keyboard shortcuts keeps working\n            });\n          }\n        }\n\n        if (this.config.showInRuler) {\n          const decorators = [];\n          for (const [ln, selection] of Object.entries(lineNumbers)) {\n            decorators.push({\n              range: new monacoWindow.monaco.Range(ln, 0, ln, 0),\n              options: {\n                isWholeLine: true,\n                overviewRuler: {\n                  color: this.config.rulerMarkerColor,\n                  darkColor: this.config.rulerMarkerDarkColor,\n                  position: 1\n                }\n              }\n            });\n\n            if (selection) {\n              decorators.push({\n                range: new monacoWindow.monaco.Range(\n                  selection.startLineNumber,\n                  selection.startColumn,\n                  selection.endLineNumber,\n                  selection.endColumn\n                ),\n                options: {\n                  className: \"reviewComment selection\"\n                }\n              });\n            }\n          }\n\n          this.currentCommentDecorations = this.editor.deltaDecorations(\n            this.currentCommentDecorations,\n            decorators\n          );\n        }\n      }\n    );\n  }\n\n  calculateNumberOfLines(text: string): number {\n    return text ? text.split(/\\r*\\n/).length + 1 : 1;\n  }\n\n  addActions() {\n    this.editor.addAction({\n      id: \"my-unique-id-add\",\n      label: \"Add Comment\",\n      keybindings: [\n        monacoWindow.monaco.KeyMod.CtrlCmd | monacoWindow.monaco.KeyCode.F10\n      ],\n      precondition: \"add-context-key\",\n      keybindingContext: null,\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 0,\n\n      run: () => {\n        this.setEditorMode(EditorMode.insertComment);\n      }\n    });\n\n    this.editor.addAction({\n      id: \"my-unique-id-next\",\n      label: \"Next Comment\",\n      keybindings: [\n        monacoWindow.monaco.KeyMod.CtrlCmd | monacoWindow.monaco.KeyCode.F12\n      ],\n      precondition: null,\n      keybindingContext: null,\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 0.101,\n\n      run: () => {\n        this.navigateToComment(NavigationDirection.next);\n      }\n    });\n\n    this.editor.addAction({\n      id: \"my-unique-id-prev\",\n      label: \"Prev Comment\",\n      keybindings: [\n        monacoWindow.monaco.KeyMod.CtrlCmd | monacoWindow.monaco.KeyCode.F11\n      ],\n      precondition: null,\n      keybindingContext: null,\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 0.102,\n\n      run: () => {\n        this.navigateToComment(NavigationDirection.prev);\n      }\n    });\n  }\n\n  navigateToComment(direction: NavigationDirection) {\n    let currentLine = 0;\n    if (this.activeComment) {\n      currentLine = this.activeComment.lineNumber;\n    } else {\n      currentLine = this.editor.getPosition().lineNumber;\n    }\n\n    const comments = Object.values(this.store.comments)\n      .map(cs => cs.comment)\n      .filter(c => {\n        if (!c.parentId) {\n          if (direction === NavigationDirection.next) {\n            return c.lineNumber > currentLine;\n          } else if (direction === NavigationDirection.prev) {\n            return c.lineNumber < currentLine;\n          }\n        }\n      });\n\n    if (comments.length) {\n      comments.sort((a, b) => {\n        if (direction === NavigationDirection.next) {\n          return a.lineNumber - b.lineNumber;\n        } else if (direction === NavigationDirection.prev) {\n          return b.lineNumber - a.lineNumber;\n        }\n      });\n\n      const comment = comments[0];\n      this.setActiveComment(comment);\n      this.refreshComments();\n      this.layoutInlineToolbar();\n      this.editor.revealLineInCenter(comment.lineNumber);\n    }\n  }\n}\n","import * as uuid from \"uuid/v4\";\n\nexport type CommonFields = {\n  id?: string;\n  targetId?: string;\n  createdBy?: string;\n  createdAt?: Date | string;\n  // script on here maybe?\n};\n\nexport type ReviewCommentEvent =\n  | ({\n      type: \"create\";\n      lineNumber: number;\n      text: string;\n      selection?: CodeSelection;\n    } & CommonFields)\n  | ({ type: \"edit\"; text: string } & CommonFields)\n  | ({ type: \"delete\" } & CommonFields);\n\nexport interface CommentState {\n  comments: Record<string, ReviewCommentState>;\n  deletedCommentIds?: Set<string>;\n  dirtyCommentIds?: Set<string>;\n}\n\nexport function commentReducer(event: ReviewCommentEvent, state: CommentState) {\n  const dirtyLineNumbers = new Set<number>();\n  const deletedCommentIds = new Set<string>();\n  const dirtyCommentIds = new Set<string>();\n  let comments = { ...state.comments };\n\n  switch (event.type) {\n    case \"edit\":\n      const parent = comments[event.targetId];\n      if (!parent) break;\n\n      const edit: ReviewCommentState = {\n        comment: {\n          ...parent.comment,\n          author: event.createdBy,\n          dt: event.createdAt,\n          text: event.text\n        },\n        history: parent.history.concat(parent.comment)\n      };\n\n      dirtyLineNumbers.add(edit.comment.lineNumber);\n      console.debug(\"edit\", event);\n\n      comments[event.targetId] = edit;\n      break;\n\n    case \"delete\":\n      const selected = comments[event.targetId];\n      if (!selected) break;\n\n      delete comments[event.targetId];\n\n      deletedCommentIds.add(selected.comment.id);\n      dirtyLineNumbers.add(selected.comment.lineNumber);\n      console.debug(\"delete\", event);\n      break;\n\n    case \"create\":\n      if (!comments[event.id]) {\n        comments[event.id] = new ReviewCommentState({\n          author: event.createdBy,\n          dt: event.createdAt,\n          id: event.id,\n          lineNumber: event.lineNumber,\n          selection: event.selection,\n          text: event.text,\n          parentId: event.targetId,\n          status: ReviewCommentStatus.active\n        });\n        console.debug(\"insert\", event);\n        dirtyLineNumbers.add(event.lineNumber);\n      }\n      break;\n  }\n\n  if (dirtyLineNumbers.size) {\n    for (const cs of Object.values(state.comments)) {\n      if (dirtyLineNumbers.has(cs.comment.lineNumber)) {\n        dirtyCommentIds.add(cs.comment.id);\n      }\n    }\n  }\n\n  return { comments, dirtyCommentIds, deletedCommentIds };\n}\n\nexport class ReviewCommentState {\n  comment: ReviewComment;\n  history: ReviewComment[];\n\n  constructor(comment: ReviewComment) {\n    this.comment = comment;\n    this.history = [comment];\n  }\n}\n\nexport enum ReviewCommentRenderState {\n  dirty = 1,\n  hidden = 2,\n  normal = 3\n}\n\nexport interface CodeSelection {\n  startColumn: number;\n  endColumn: number;\n  startLineNumber: number;\n  endLineNumber: number;\n}\n\nexport interface ReviewComment {\n  id: string;\n  parentId?: string;\n  author: string;\n  dt: Date | string;\n  lineNumber: number;\n  text: string;\n  selection: CodeSelection;\n  status: ReviewCommentStatus;\n}\n\nexport enum ReviewCommentStatus {\n  active = 1,\n  deleted = 2,\n  edit = 3\n}\n\nexport function reduceComments(\n  actions: ReviewCommentEvent[],\n  state: CommentState = null\n) {\n  state = state || { comments: {} };\n\n  for (const a of actions) {\n    if (!a.id) {\n      a.id = uuid();\n    }\n    state = commentReducer(a, state);\n  }\n\n  return state;\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n"],"sourceRoot":""}