{"version":3,"sources":["webpack://MonacoEditorCodeReview/webpack/bootstrap","webpack://MonacoEditorCodeReview/./node_modules/uuid/v4.js","webpack://MonacoEditorCodeReview/./src/index.ts","webpack://MonacoEditorCodeReview/./src/events-comments-reducers.ts","webpack://MonacoEditorCodeReview/./node_modules/uuid/lib/rng-browser.js","webpack://MonacoEditorCodeReview/./node_modules/uuid/lib/bytesToUuid.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rng","bytesToUuid","options","buf","offset","Array","rnds","random","ii","reduceComments","monacoWindow","window","NavigationDirection","EditorMode","editor","currentUser","actions","onChange","config","verbose","rm","ReviewManager","load","defaultReviewManagerConfig","commentIndent","commentIndentOffset","editButtonAddText","editButtonEditText","editButtonEnableEdit","editButtonEnableRemove","editButtonOffset","editButtonRemoveText","formatDate","readOnly","rulerMarkerColor","rulerMarkerDarkColor","showAddCommentGlyph","showInRuler","verticalOffset","this","activeComment","widgetInlineToolbar","widgetInlineCommentEditor","editorMode","toolbar","currentLineDecorations","currentCommentDecorations","currentLineDecorationLineNumber","events","store","comments","renderStore","editorConfig","getRawOptions","onDidChangeConfiguration","onMouseDown","handleMouseDown","canAddCondition","createContextKey","inlineToolbarElements","createInlineToolbarWidget","editorElements","createInlineEditorWidget","addActions","onMouseMove","handleMouseMove","set","renderAddCommentLineDecoration","loadFromStore","changeViewZones","changeAccessor","viewState","values","x","getRenderState","comment","id","viewZoneId","removeZone","deletedCommentIds","dirtyCommentIds","refreshComments","console","debug","length","theme","_themeService","getTheme","getColor","themeName","indexOf","root","document","createElement","className","style","marginLeft","add","innerText","setAttribute","onclick","setEditorMode","insertComment","appendChild","remove","edit","spacer","removeComment","editComment","focus","lineNumber","getSelection","endLineNumber","text","textarea","selection","addComment","e","code","handleCancel","preventDefault","info","ctrlKey","handleAddComment","resize","onkeydown","handleTextAreaKeyDown","confirm","fontFamily","cancel","buttonsElement","createInlineEditButtonsElement","this_","allowEditorOverflow","getId","getDomNode","getPosition","position","column","preference","addContentWidget","editorElement","createInlineEditorElement","lineNumbersToMakeDirty","push","filterAndMapComments","renderStatus","ReviewCommentRenderState","dirty","lineNumbers","fn","cs","ev","target","lines","range","monaco","Range","marginClassName","zIndex","deltaDecorations","element","setPosition","hasAttribute","detail","map","setActiveComment","includeActiveCommentHeight","count","marginTop","lineHeight","item","iterateComments","state","calculateNumberOfLines","backgroundColor","getThemedColor","calculateMarginTopOffset","hasChildren","isSameUser","author","display","layoutContentWidget","forEach","color","button","warn","layoutInlineCommentEditor","layoutInlineToolbar","setTimeout","Date","allComments","filterFn","depth","results","filter","recurseComments","parentId","copyCommentState","addEvent","type","targetId","event","createdBy","createdAt","getDateTimeNow","uuid","commentReducer","status","ReviewCommentStatus","deleted","dt","toISOString","tagName","span","commentId","cid","from","hidden","normal","isActive","domNode","history","addZone","afterLineNumber","heightInLines","suppressMouseDown","decorators","ln","entries","isWholeLine","overviewRuler","darkColor","startLineNumber","startColumn","endColumn","split","addAction","label","keybindings","KeyMod","CtrlCmd","KeyCode","F10","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","F12","navigateToComment","next","F11","prev","direction","currentLine","sort","a","b","revealLineInCenter","dirtyLineNumbers","Set","parent","concat","selected","ReviewCommentState","active","size","has","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","Math","byteToHex","toString","substr","bth","join"],"mappings":"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","file":"index-var-es2017.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import * as monacoEditor from \"monaco-editor\";\nimport {\n    reduceComments, ReviewCommentStatus, commentReducer, CodeSelection,\n     CommentState as ReviewCommentStore, ReviewCommentState, ReviewCommentEvent,\n    ReviewComment, ReviewCommentRenderState\n} from \"./events-comments-reducers\";\nimport * as uuid from \"uuid/v4\";\nexport {\n    ReviewCommentStore, ReviewCommentEvent, reduceComments\n}\n\ninterface MonacoWindow {\n    monaco: any;\n}\n\nconst monacoWindow = (window as any) as MonacoWindow;\n\nenum NavigationDirection {\n    next = 1,\n    prev = 2\n}\n\nexport enum EditorMode {\n    insertComment = 1,\n    editComment = 2,\n    toolbar = 3\n}\n\n\nexport function createReviewManager(editor: any, currentUser: string, actions?: ReviewCommentEvent[], onChange?: OnActionsChanged, config?: ReviewManagerConfig, verbose?: boolean): ReviewManager {\n    //For Debug: (window as any).editor = editor;\n    const rm = new ReviewManager(editor, currentUser, onChange, config, verbose);\n    rm.load(actions || []);\n    return rm;\n}\n\n\ninterface ReviewCommentIterItem {\n    depth: number;\n    state: ReviewCommentState\n}\n\ninterface OnActionsChanged {\n    (actions: ReviewCommentEvent[]): void\n}\n\nexport interface ReviewManagerConfig {\n    commentIndent?: number;\n    commentIndentOffset?: number;\n    editButtonAddText?: string;\n    editButtonEnableRemove?: boolean;\n    editButtonOffset?: string;\n    editButtonRemoveText?: string;\n    formatDate?: { (dt: Date): string }\n    readOnly?: boolean;\n    reviewCommentIconActive?: string;\n    reviewCommentIconSelect?: string;\n    showInRuler?: boolean;\n    verticalOffset?: number;\n}\n\ninterface ReviewManagerConfigPrivate {\n    commentIndent: number;\n    commentIndentOffset: number;\n    editButtonAddText: string;\n    editButtonEditText: string;\n    editButtonEnableEdit: boolean;\n    editButtonEnableRemove: boolean;\n    editButtonOffset: string;\n    editButtonRemoveText: string;\n    formatDate?: { (dt: Date | string): string };\n    readOnly: boolean;\n    rulerMarkerColor: any;\n    rulerMarkerDarkColor: any;\n    showAddCommentGlyph: boolean\n    showInRuler: boolean;\n    verticalOffset: number;\n}\n\n\nconst defaultReviewManagerConfig: ReviewManagerConfigPrivate = {\n    commentIndent: 20,\n    commentIndentOffset: 20,\n    editButtonAddText: 'Reply',\n    editButtonEditText: 'Edit',\n    editButtonEnableEdit: true,\n    editButtonEnableRemove: true,\n    editButtonOffset: '-10px',\n    editButtonRemoveText: 'Remove',\n    formatDate: null,\n    readOnly: false,\n    rulerMarkerColor: 'darkorange',\n    rulerMarkerDarkColor: 'darkorange',\n    showAddCommentGlyph: true,\n    showInRuler: true,\n    verticalOffset: 0,\n};\n\nconst CONTROL_ATTR_NAME = 'ReviewManagerControl';\nconst POSITION_BELOW = 2; //above=1, below=2, exact=0\n\n\ninterface EditorElements {\n    cancel: HTMLButtonElement;\n    confirm: HTMLButtonElement;\n    root: HTMLSpanElement\n    textarea: HTMLTextAreaElement;\n}\n\ninterface InlineToolbarElements {\n    add: HTMLSpanElement;\n    edit: HTMLSpanElement;\n    remove: HTMLSpanElement;\n    root: HTMLDivElement;\n}\ninterface RenderStoreItem {\n    viewZoneId: string, renderStatus: ReviewCommentRenderState\n}\n\nexport class ReviewManager {\n    currentUser: string;\n    editor: monacoEditor.editor.IStandaloneCodeEditor;\n    editorConfig: monacoEditor.editor.IEditorOptions;\n    events: ReviewCommentEvent[];\n    store: ReviewCommentStore;\n    activeComment?: ReviewComment;\n    widgetInlineToolbar: monacoEditor.editor.IContentWidget;\n    widgetInlineCommentEditor: monacoEditor.editor.IContentWidget;\n    onChange: OnActionsChanged;\n    editorMode: EditorMode;\n    config: ReviewManagerConfigPrivate;\n    currentLineDecorations: string[];\n    currentCommentDecorations: string[];\n    currentLineDecorationLineNumber?: number;\n\n    editorElements: EditorElements;\n    inlineToolbarElements: InlineToolbarElements;\n    verbose: boolean;\n    canAddCondition: monacoEditor.editor.IContextKey<boolean>;\n\n    renderStore: Record<string, RenderStoreItem>\n\n    constructor(editor: any, currentUser: string, onChange: OnActionsChanged, config?: ReviewManagerConfig, verbose?: boolean) {\n        this.currentUser = currentUser;\n        this.editor = editor;\n        this.activeComment = null; //TODO - consider moving onto the store\n        this.widgetInlineToolbar = null;\n        this.widgetInlineCommentEditor = null;\n        this.onChange = onChange;\n        this.editorMode = EditorMode.toolbar;\n        this.config = { ...defaultReviewManagerConfig, ...(config || {}) };\n        this.currentLineDecorations = [];\n        this.currentCommentDecorations = []\n        this.currentLineDecorationLineNumber = null;\n        this.events = [];\n        this.store = { comments: {} };//, viewZoneIdsToDelete: [] };\n        this.renderStore = {};\n\n        this.verbose = verbose;\n\n        this.editorConfig = this.editor.getRawOptions();\n        this.editor.onDidChangeConfiguration(() => this.editorConfig = this.editor.getRawOptions());\n        this.editor.onMouseDown(this.handleMouseDown.bind(this));\n        this.canAddCondition = this.editor.createContextKey('add-context-key', !this.config.readOnly);\n        this.inlineToolbarElements = this.createInlineToolbarWidget();\n        this.editorElements = this.createInlineEditorWidget();\n        this.addActions();\n\n        if (this.config.showAddCommentGlyph) {\n            this.editor.onMouseMove(this.handleMouseMove.bind(this));\n        }\n    }\n\n    setReadOnlyMode(value: boolean) {\n        this.config.readOnly = value;\n        this.canAddCondition.set(value);\n        this.renderAddCommentLineDecoration(null);\n    }\n\n    load(events: ReviewCommentEvent[]): void {\n        const store = reduceComments(events)\n        this.loadFromStore(store, events);\n    }\n\n    loadFromStore(store: ReviewCommentStore, events: ReviewCommentEvent[]) {\n        this.editor.changeViewZones((changeAccessor: monacoEditor.editor.IViewZoneChangeAccessor) => {\n\n            // Remove all the existing comments     \n            for (const viewState of Object.values(this.store.comments)) {\n                const x = this.getRenderState(viewState.comment.id);\n                if (x && x.viewZoneId !== null) {\n                    changeAccessor.removeZone(x.viewZoneId);\n                }\n            }\n\n            this.events = events;\n            this.store = store;\n            this.store.deletedCommentIds = null;\n            this.store.dirtyCommentIds = null;\n            this.renderStore = {};\n\n            this.refreshComments();\n\n            this.verbose && console.debug('Events Loaded:', events.length, 'Review Comments:', Object.values(this.store.comments).length);\n        })\n    }\n\n    getThemedColor(name: string): string {\n        // editor.background: e {rgba: e}\n        // editor.foreground: e {rgba: e}\n        // editor.inactiveSelectionBackground: e {rgba: e}\n        // editor.selectionHighlightBackground: e {rgba: e}\n        // editorIndentGuide.activeBackground: e {rgba: e}\n        // editorIndentGuide.background: e {rgba: e}\n        const theme = (this.editor as any)._themeService.getTheme();\n        let value = theme.getColor(name);\n\n        // HACK - Buttons themes are not in monaco ... so just hack in theme for dark\n        const missingThemes = {\n            'dark': {\n                \"button.background\": \"#0e639c\",\n                \"button.foreground\": \"#ffffff\",\n            },\n            'light': {\n                \"button.background\": \"#007acc\",\n                \"button.foreground\": \"#ffffff\"\n            }\n        }\n        if (!value) {\n            value = missingThemes[theme.themeName.indexOf('dark') > -1 ? 'dark' : 'light'][name];\n        }\n        return value;\n    }\n\n    createInlineEditButtonsElement(): InlineToolbarElements {\n        var root = document.createElement('div') as HTMLDivElement;\n        root.className = 'editButtonsContainer'\n        root.style.marginLeft = this.config.editButtonOffset;\n\n        const add = document.createElement('span') as HTMLSpanElement;\n        add.innerText = this.config.editButtonAddText;\n        add.className = 'editButton add'\n        add.setAttribute(CONTROL_ATTR_NAME, '');\n        add.onclick = () => this.setEditorMode(EditorMode.insertComment);\n        root.appendChild(add);\n\n        let remove = null;\n        let edit = null;\n        let spacer = null;\n\n        if (this.config.editButtonEnableRemove) {\n            spacer = document.createElement('div') as HTMLDivElement;\n            spacer.innerText = ' '\n            root.appendChild(spacer);\n\n            remove = document.createElement('span') as HTMLSpanElement;\n            remove.setAttribute(CONTROL_ATTR_NAME, '');\n            remove.innerText = this.config.editButtonRemoveText;\n            remove.className = 'editButton remove'\n            remove.onclick = () => this.activeComment && this.removeComment(this.activeComment.id);\n            root.appendChild(remove);\n        }\n\n        if (this.config.editButtonEnableEdit) {\n            spacer = document.createElement('div') as HTMLDivElement;\n            spacer.innerText = ' '\n            root.appendChild(spacer);\n\n            edit = document.createElement('span') as HTMLSpanElement;\n            edit.setAttribute(CONTROL_ATTR_NAME, '');\n            edit.innerText = this.config.editButtonEditText;\n            edit.className = 'editButton edit'\n            edit.onclick = () => this.setEditorMode(EditorMode.editComment);\n            root.appendChild(edit);\n        }\n\n        return { root, add, remove, edit };\n    }\n\n    handleCancel() {\n        this.setEditorMode(EditorMode.toolbar);\n        this.editor.focus();\n    }\n\n    handleAddComment() {\n        const lineNumber = this.activeComment ? this.activeComment.lineNumber : this.editor.getSelection().endLineNumber;\n        const text = this.editorElements.textarea.value;\n        const selection = this.activeComment ? null : this.editor.getSelection() as CodeSelection;\n        this.addComment(lineNumber, text, selection);\n        this.setEditorMode(EditorMode.toolbar);\n        this.editor.focus();\n    }\n\n    handleTextAreaKeyDown(e: KeyboardEvent) {\n        if (e.code === \"Escape\") {\n            this.handleCancel();\n            e.preventDefault();\n            console.info('preventDefault: Escape Key');\n        } else if (e.code === \"Enter\" && e.ctrlKey) {\n            this.handleAddComment();\n            e.preventDefault();\n            console.info('preventDefault: ctrl+Enter');\n        }\n    }\n\n    createInlineEditorElement(): EditorElements {\n        var root = document.createElement('span') as HTMLSpanElement;\n        root.className = \"reviewCommentEditor\"\n\n        const textarea = document.createElement('textarea') as HTMLTextAreaElement;\n        textarea.setAttribute(CONTROL_ATTR_NAME, '');\n        textarea.className = \"reviewCommentEditor text\";\n        textarea.innerText = '';\n        textarea.style.resize = \"none\";\n        textarea.name = 'text';\n        textarea.onkeydown = this.handleTextAreaKeyDown.bind(this);\n\n        const confirm = document.createElement('button') as HTMLButtonElement;\n        confirm.setAttribute(CONTROL_ATTR_NAME, '');\n        confirm.className = \"reviewCommentEditor save\";\n        confirm.style.fontFamily = \"Consolas\";\n        confirm.innerText = 'Add Comment';\n        confirm.onclick = this.handleAddComment.bind(this);\n\n        const cancel = document.createElement('button') as HTMLButtonElement;\n        cancel.setAttribute(CONTROL_ATTR_NAME, '');\n        cancel.className = \"reviewCommentEditor cancel\";\n        cancel.innerText = 'Cancel';\n        cancel.onclick = this.handleCancel.bind(this);\n\n        root.appendChild(textarea);\n        root.appendChild(cancel);\n        root.appendChild(confirm);\n\n        return { root, confirm, cancel, textarea };\n    }\n\n    createInlineToolbarWidget() {\n        const buttonsElement = this.createInlineEditButtonsElement();\n        const this_ = this;\n\n        this.widgetInlineToolbar = {\n            allowEditorOverflow: true,\n            getId: () => {\n                return 'widgetInlineToolbar';\n            },\n            getDomNode: () => {\n                return buttonsElement.root;\n            },\n            getPosition: () => {\n                if (this_.activeComment && this_.editorMode == EditorMode.toolbar && !this_.config.readOnly) {\n                    return {\n                        position: {\n                            lineNumber: this_.activeComment.lineNumber,\n                            column: 1\n                        },\n                        preference: [POSITION_BELOW]\n                    }\n                }\n            }\n        };\n\n        this.editor.addContentWidget(this.widgetInlineToolbar);\n        return buttonsElement;\n    }\n\n    createInlineEditorWidget(): EditorElements {\n        // doesn't re-theme when\n        const editorElement = this.createInlineEditorElement();\n\n        this.widgetInlineCommentEditor = {\n            allowEditorOverflow: true,\n            getId: () => {\n                return 'widgetInlineEditor';\n            },\n            getDomNode: () => {\n                return editorElement.root;\n            },\n            getPosition: () => {\n                if (this.editorMode == EditorMode.insertComment || this.editorMode == EditorMode.editComment) {\n                    return {\n                        position: {\n                            lineNumber: this.activeComment ? this.activeComment.lineNumber : this.editor.getPosition().lineNumber + 1,\n                            column: 1\n                        },\n                        preference: [POSITION_BELOW]\n                    }\n                }\n            }\n        };\n\n        this.editor.addContentWidget(this.widgetInlineCommentEditor);\n        return editorElement;\n    }\n\n    setActiveComment(comment: ReviewComment) {\n        this.verbose && console.debug('setActiveComment', comment);\n\n        const lineNumbersToMakeDirty = [];\n        if (this.activeComment && (!comment || this.activeComment.lineNumber !== comment.lineNumber)) {\n            lineNumbersToMakeDirty.push(this.activeComment.lineNumber);\n        }\n        if (comment) {\n            lineNumbersToMakeDirty.push(comment.lineNumber);\n        }\n\n        this.activeComment = comment;\n        if (lineNumbersToMakeDirty.length > 0) {\n            this.filterAndMapComments(lineNumbersToMakeDirty, (comment) => {\n                this.renderStore[comment.id].renderStatus = ReviewCommentRenderState.dirty\n\n            });\n        }\n    }\n\n    filterAndMapComments(lineNumbers: number[], fn: { (comment: ReviewComment): void }) {\n        for (const cs of Object.values(this.store.comments)) {\n            if (lineNumbers.indexOf(cs.comment.lineNumber) > -1) {\n                fn(cs.comment);\n            }\n        }\n    }\n\n    handleMouseMove(ev: monacoEditor.editor.IEditorMouseEvent) {\n        if (ev.target && ev.target.position && ev.target.position.lineNumber) {\n            this.currentLineDecorationLineNumber = ev.target.position.lineNumber;\n            this.renderAddCommentLineDecoration(this.config.readOnly ? null : this.currentLineDecorationLineNumber);\n        }\n    }\n\n    renderAddCommentLineDecoration(lineNumber?: number) {\n        const lines = lineNumber ? [\n            {\n                range: new monacoWindow.monaco.Range(lineNumber, 0, lineNumber, 0),\n                options: {\n                    marginClassName: 'activeLineMarginClass',\n                    zIndex: 100\n                }\n            }\n        ] : [];\n        this.currentLineDecorations = this.editor.deltaDecorations(this.currentLineDecorations, lines);\n    }\n\n    handleMouseDown(ev: { target: { element: { className: string, hasAttribute: { (string): boolean } }, detail: any } }) {\n        // Not ideal - but couldn't figure out a different way to identify the glyph event        \n        if (ev.target.element.className && ev.target.element.className.indexOf('activeLineMarginClass') > -1) {\n            this.editor.setPosition({\n                lineNumber: this.currentLineDecorationLineNumber,\n                column: 1\n            });\n            this.setEditorMode(EditorMode.insertComment);\n        } else if (!ev.target.element.hasAttribute(CONTROL_ATTR_NAME)) {\n            let activeComment: ReviewComment = null;\n\n            if (ev.target.detail && ev.target.detail.viewZoneId !== null) {\n                for (const comment of Object.values(this.store.comments).map(c => c.comment)) {\n                    const x = this.getRenderState(comment.id);\n                    if (x.viewZoneId == ev.target.detail.viewZoneId) {\n                        activeComment = comment;\n                        break;\n                    }\n                }\n            }\n            this.setActiveComment(activeComment);\n            this.refreshComments();\n            this.setEditorMode(EditorMode.toolbar);\n        }\n    }\n\n    private calculateMarginTopOffset(includeActiveCommentHeight: boolean): number {\n        let count = 0;\n        let marginTop = 0;\n        const lineHeight = this.editorConfig.lineHeight;\n\n        if (this.activeComment) {\n            for (var item of this.iterateComments()) {\n                if (item.state.comment.lineNumber === this.activeComment.lineNumber &&\n                    (item.state.comment != this.activeComment || includeActiveCommentHeight)) {\n                    count += this.calculateNumberOfLines(item.state.comment.text);\n                }\n\n                if (item.state.comment == this.activeComment) {\n                    break;\n                }\n            }\n            marginTop = count * lineHeight;\n        }\n        const result = marginTop + this.config.verticalOffset;\n        return result;\n    }\n\n    layoutInlineToolbar() {\n        this.inlineToolbarElements.root.style.backgroundColor = this.getThemedColor(\"editor.background\");\n        this.inlineToolbarElements.root.style.marginTop = `${this.calculateMarginTopOffset(false)}px`;\n\n        if (this.inlineToolbarElements.remove) {\n            const hasChildren = this.activeComment && this.iterateComments((c) => c.comment.id === this.activeComment.id).length > 1\n            const isSameUser = this.activeComment && this.activeComment.author === this.currentUser;\n            this.inlineToolbarElements.remove.style.display = hasChildren ? 'none' : '';\n            this.inlineToolbarElements.edit.style.display = hasChildren || !isSameUser ? 'none' : '';\n        }\n\n        this.editor.layoutContentWidget(this.widgetInlineToolbar);\n    }\n\n    layoutInlineCommentEditor() {\n        [this.editorElements.root, this.editorElements.textarea].forEach(e => {\n            e.style.backgroundColor = this.getThemedColor(\"editor.background\");\n            e.style.color = this.getThemedColor(\"editor.foreground\");\n        });\n\n        [this.editorElements.confirm, this.editorElements.cancel]\n            .forEach((button) => {\n                button.style.backgroundColor = this.getThemedColor(\"button.background\");\n                button.style.color = this.getThemedColor(\"button.foreground\");\n            });\n\n        this.editorElements.confirm.innerText = this.editorMode === EditorMode.insertComment ? \"Add Comment\" : \"Edit Comment\";\n        this.editorElements.root.style.marginTop = `${this.calculateMarginTopOffset(true)}px`;\n\n        this.editor.layoutContentWidget(this.widgetInlineCommentEditor);\n    }\n\n    setEditorMode(mode: EditorMode) {\n        this.editorMode = this.config.readOnly ? EditorMode.toolbar : mode;\n        console.warn('setEditorMode', EditorMode[mode],\n            'Comment:', this.activeComment,\n            'ReadOnly:', this.config.readOnly,\n            'Result:', EditorMode[this.editorMode]);\n\n        this.layoutInlineCommentEditor();\n        this.layoutInlineToolbar();\n\n        if (mode == EditorMode.insertComment || mode == EditorMode.editComment) {\n            if (mode == EditorMode.insertComment) {\n                this.editorElements.textarea.value = \"\";\n            } else if (mode == EditorMode.editComment) {\n                this.editorElements.textarea.value = this.activeComment ? this.activeComment.text : '';\n            }\n            //HACK - because the event in monaco doesn't have preventdefault which means editor takes focus back...                        \n            setTimeout(() => this.editorElements.textarea.focus(), 100);//TODO - make configurable\n        }\n    }\n\n    getDateTimeNow() {\n        return new Date();\n    }\n\n    private recurseComments(allComments: { [key: string]: ReviewCommentState }, filterFn: { (c: ReviewCommentState): boolean }, depth: number, results: ReviewCommentIterItem[]) {\n        const comments = Object.values(allComments).filter(filterFn);\n        for (const cs of comments) {\n            const comment = cs.comment;\n            delete allComments[comment.id];\n\n            results.push({\n                depth,\n                state: cs\n            });\n            this.recurseComments(allComments,\n                (x) => x.comment.parentId === comment.id,\n                depth + 1,\n                results);\n        }\n    }\n\n    private iterateComments(filterFn?: { (c: ReviewCommentState): boolean }) {\n        if (!filterFn) {\n            filterFn = (cs: ReviewCommentState) => !cs.comment.parentId;\n        }\n        const copyCommentState = { ...this.store.comments };\n        const results: ReviewCommentIterItem[] = [];\n        this.recurseComments(copyCommentState, filterFn, 0, results);\n        return results;\n    }\n\n    removeComment(id: string) {\n        return this.addEvent({ type: \"delete\", targetId: id });\n    }\n\n    addComment(lineNumber: number, text: string, selection?: CodeSelection) {\n        const event: ReviewCommentEvent = this.editorMode === EditorMode.editComment ?\n            { type: \"edit\", text, targetId: this.activeComment.id }\n            : { type: \"create\", text, lineNumber, selection, targetId: this.activeComment && this.activeComment.id };\n\n        return this.addEvent(event);\n    }\n\n    private addEvent(event: ReviewCommentEvent) {\n        event.createdBy = this.currentUser;\n        event.createdAt = this.getDateTimeNow();\n        event.id = uuid();\n\n        this.events.push(event);\n        this.store = commentReducer(event, this.store);\n\n        if (this.activeComment && !this.store.comments[this.activeComment.id]) {\n            this.setActiveComment(null);\n        } else if (this.activeComment && this.activeComment.status === ReviewCommentStatus.deleted) {\n            this.setActiveComment(null);\n        }\n\n        this.refreshComments()\n        this.layoutInlineToolbar();\n\n        if (this.onChange) {\n            this.onChange(this.events);\n        }\n\n        return event;\n    }\n\n    private formatDate(dt: Date | string) {\n        if (this.config.formatDate) {\n            return this.config.formatDate(dt)\n        } else if (dt instanceof Date) {\n            return dt.toISOString();\n        } else {\n            return dt;\n        }\n    }\n\n    private createElement(text: string, className: string, tagName: string = null) {\n        const span = document.createElement(tagName || 'span') as HTMLSpanElement;\n        span.className = className;\n        span.innerText = text;\n        return span;\n    }\n\n    getRenderState(commentId: string): RenderStoreItem {\n        if (!this.renderStore[commentId]) {\n            this.renderStore[commentId] = { viewZoneId: null, renderStatus: null };\n        }\n        return this.renderStore[commentId];\n    }\n\n    refreshComments() {\n        this.editor.changeViewZones((changeAccessor: {\n            addZone: { (zone: { afterLineNumber: number, heightInLines: number, domNode: HTMLElement, suppressMouseDown: boolean }): string },\n            removeZone: { (id: string): void }\n        }) => {\n            const lineNumbers: { [key: number]: CodeSelection } = {};\n\n            for (const cid of Array.from(this.store.deletedCommentIds || [])) {\n                const viewZoneId = this.renderStore[cid]?.viewZoneId;\n                changeAccessor.removeZone(viewZoneId);\n                this.verbose && console.debug('Zone.Delete', viewZoneId);\n            }\n            this.store.deletedCommentIds = null;\n\n            for (const cid of Array.from(this.store.dirtyCommentIds || [])) {\n                this.getRenderState(cid).renderStatus = ReviewCommentRenderState.dirty;\n            }\n            this.store.dirtyCommentIds = null;\n\n            for (const item of this.iterateComments()) {\n                const x = this.getRenderState(item.state.comment.id);\n\n                if (x.renderStatus === ReviewCommentRenderState.hidden) {\n                    this.verbose && console.debug('Zone.Hidden', item.state.comment.id);\n\n                    changeAccessor.removeZone(x.viewZoneId);\n                    x.viewZoneId = null;\n\n                    continue;\n                }\n\n                if (x.renderStatus === ReviewCommentRenderState.dirty) {\n                    this.verbose && console.debug('Zone.Dirty', item.state.comment.id);\n\n                    changeAccessor.removeZone(x.viewZoneId);\n                    x.viewZoneId = null;\n                    x.renderStatus = ReviewCommentRenderState.normal;\n                }\n\n                if (!lineNumbers[item.state.comment.lineNumber]) {\n                    lineNumbers[item.state.comment.lineNumber] = item.state.comment.selection;\n                }\n\n                if (x.viewZoneId == null) {\n                    this.verbose && console.debug('Zone.Create', item.state.comment.id);\n\n                    const isActive = this.activeComment == item.state.comment;\n\n                    const domNode = this.createElement(\"\", `reviewComment ${isActive ? 'active' : ' inactive'}`);\n                    domNode.style.marginLeft = (this.config.commentIndent * (item.depth + 1)) + this.config.commentIndentOffset + \"px\";\n                    domNode.style.backgroundColor = this.getThemedColor(\"editor.selectionHighlightBackground\");\n\n                    // For Debug - domNode.appendChild(this.createElement(`${item.state.comment.id}`, 'reviewComment id'))\n\n                    domNode.appendChild(this.createElement(`${item.state.comment.author || ' '} at `, 'reviewComment author'));\n                    domNode.appendChild(this.createElement(this.formatDate(item.state.comment.dt), 'reviewComment dt'))\n                    if (item.state.history.length > 1) {\n                        domNode.appendChild(this.createElement(`(Edited ${item.state.history.length - 1} times)`, 'reviewComment history'))\n                    }\n                    domNode.appendChild(this.createElement(`${item.state.comment.text}`, 'reviewComment text', 'div'))\n\n                    x.viewZoneId = changeAccessor.addZone({\n                        afterLineNumber: item.state.comment.lineNumber,\n                        heightInLines: this.calculateNumberOfLines(item.state.comment.text),\n                        domNode: domNode,\n                        suppressMouseDown: true // This stops focus being lost the editor - meaning keyboard shortcuts keeps working\n                    });\n                }\n            }\n\n            if (this.config.showInRuler) {\n                const decorators = [];\n                for (const [ln, selection] of Object.entries(lineNumbers)) {\n\n                    decorators.push({\n                        range: new monacoWindow.monaco.Range(ln, 0, ln, 0),\n                        options: {\n                            isWholeLine: true,\n                            overviewRuler: {\n                                color: this.config.rulerMarkerColor,\n                                darkColor: this.config.rulerMarkerDarkColor,\n                                position: 1\n                            }\n                        }\n                    })\n\n                    if (selection) {\n                        decorators.push({\n                            range: new monacoWindow.monaco.Range(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn),\n                            options: {\n                                className: 'reviewComment selection',\n                            }\n                        })\n                    }\n                }\n\n                this.currentCommentDecorations = this.editor.deltaDecorations(this.currentCommentDecorations, decorators);\n            }\n        });\n    }\n\n    calculateNumberOfLines(text: string): number {\n        return text ? text.split(/\\r*\\n/).length + 1 : 1;\n    }\n\n    addActions() {\n        this.editor.addAction({\n            id: 'my-unique-id-add',\n            label: 'Add Comment',\n            keybindings: [\n                monacoWindow.monaco.KeyMod.CtrlCmd | monacoWindow.monaco.KeyCode.F10,\n            ],\n            precondition: 'add-context-key',\n            keybindingContext: null,\n            contextMenuGroupId: 'navigation',\n            contextMenuOrder: 0,\n\n            run: () => {\n                this.setEditorMode(EditorMode.insertComment);\n            }\n        });\n\n        this.editor.addAction({\n            id: 'my-unique-id-next',\n            label: 'Next Comment',\n            keybindings: [\n                monacoWindow.monaco.KeyMod.CtrlCmd | monacoWindow.monaco.KeyCode.F12,\n            ],\n            precondition: null,\n            keybindingContext: null,\n            contextMenuGroupId: 'navigation',\n            contextMenuOrder: 0.101,\n\n            run: () => {\n                this.navigateToComment(NavigationDirection.next);\n            }\n        });\n\n        this.editor.addAction({\n            id: 'my-unique-id-prev',\n            label: 'Prev Comment',\n            keybindings: [\n                monacoWindow.monaco.KeyMod.CtrlCmd | monacoWindow.monaco.KeyCode.F11,\n            ],\n            precondition: null,\n            keybindingContext: null,\n            contextMenuGroupId: 'navigation',\n            contextMenuOrder: 0.102,\n\n            run: () => {\n                this.navigateToComment(NavigationDirection.prev);\n            }\n        });\n    }\n\n    navigateToComment(direction: NavigationDirection) {\n        let currentLine = 0;\n        if (this.activeComment) {\n            currentLine = this.activeComment.lineNumber;\n        } else {\n            currentLine = this.editor.getPosition().lineNumber;\n        }\n\n        const comments = Object.values(this.store.comments).map(cs => cs.comment).filter((c) => {\n            if (!c.parentId) {\n                if (direction === NavigationDirection.next) {\n                    return c.lineNumber > currentLine;\n                } else if (direction === NavigationDirection.prev) {\n                    return c.lineNumber < currentLine;\n                }\n            }\n        });\n\n        if (comments.length) {\n            comments.sort((a, b) => {\n                if (direction === NavigationDirection.next) {\n                    return a.lineNumber - b.lineNumber;\n                } else if (direction === NavigationDirection.prev) {\n                    return b.lineNumber - a.lineNumber;\n                }\n            });\n\n            const comment = comments[0];\n            this.setActiveComment(comment)\n            this.refreshComments();\n            this.layoutInlineToolbar();\n            this.editor.revealLineInCenter(comment.lineNumber);\n        }\n    }\n}\n\n\n","import * as uuid from \"uuid/v4\";\n\nexport type CommonFields = {\n  id?: string;\n  targetId?: string;\n  createdBy?: string;\n  createdAt?: Date | string;\n  // script on here maybe?\n};\n\nexport type ReviewCommentEvent =\n  | ({\n      type: \"create\";\n      lineNumber: number;\n      text: string;\n      selection?: CodeSelection;\n    } & CommonFields)\n  | ({ type: \"edit\"; text: string } & CommonFields)\n  | ({ type: \"delete\" } & CommonFields);\n\nexport interface CommentState {\n  comments: Record<string, ReviewCommentState>;\n  deletedCommentIds?: Set<string>;\n  dirtyCommentIds?: Set<string>;\n}\n\nexport function commentReducer(event: ReviewCommentEvent, state: CommentState) {\n  const dirtyLineNumbers = new Set<number>();\n  const deletedCommentIds = new Set<string>();\n  const dirtyCommentIds = new Set<string>();\n  let comments = { ...state.comments };\n\n  switch (event.type) {\n    case \"edit\":\n      const parent = comments[event.targetId];\n      if (!parent) break;\n\n      const edit: ReviewCommentState = {\n        comment: {\n          ...parent.comment,\n          author: event.createdBy,\n          dt: event.createdAt,\n          text: event.text\n        },\n        history: parent.history.concat(parent.comment)\n      };\n\n      dirtyLineNumbers.add(edit.comment.lineNumber);\n      console.debug(\"edit\", event);\n\n      comments[event.targetId] = edit;\n      break;\n\n    case \"delete\":\n      const selected = comments[event.targetId];\n      if (!selected) break;\n\n      delete comments[event.targetId];\n\n      deletedCommentIds.add(selected.comment.id);\n      dirtyLineNumbers.add(selected.comment.lineNumber);\n      console.debug(\"delete\", event);\n      break;\n\n    case \"create\":\n      if (!comments[event.id]) {\n        comments[event.id] = new ReviewCommentState({\n          author: event.createdBy,\n          dt: event.createdAt,\n          id: event.id,\n          lineNumber: event.lineNumber,\n          selection: event.selection,\n          text: event.text,\n          parentId: event.targetId,\n          status: ReviewCommentStatus.active\n        });\n        console.debug(\"insert\", event);\n        dirtyLineNumbers.add(event.lineNumber);\n      }\n      break;\n  }\n\n  if (dirtyLineNumbers.size) {\n    for (const cs of Object.values(state.comments)) {\n      if (dirtyLineNumbers.has(cs.comment.lineNumber)) {\n        dirtyCommentIds.add(cs.comment.id);\n      }\n    }\n  }\n\n  return { comments, dirtyCommentIds, deletedCommentIds };\n}\n\nexport class ReviewCommentState {\n  comment: ReviewComment;\n  history: ReviewComment[];\n\n  constructor(comment: ReviewComment) {\n    this.comment = comment;\n    this.history = [comment];\n  }\n}\n\nexport enum ReviewCommentRenderState {\n  dirty = 1,\n  hidden = 2,\n  normal = 3\n}\n\nexport interface CodeSelection {\n  startColumn: number;\n  endColumn: number;\n  startLineNumber: number;\n  endLineNumber: number;\n}\n\nexport interface ReviewComment {\n  id: string;\n  parentId?: string;\n  author: string;\n  dt: Date | string;\n  lineNumber: number;\n  text: string;\n  selection: CodeSelection;\n  status: ReviewCommentStatus;\n}\n\nexport enum ReviewCommentStatus {\n  active = 1,\n  deleted = 2,\n  edit = 3\n}\n\nexport function reduceComments(\n  actions: ReviewCommentEvent[],\n  state: CommentState = null\n) {\n  state = state || { comments: {} };\n\n  for (const a of actions) {\n    if (!a.id) {\n      a.id = uuid();\n    }\n    state = commentReducer(a, state);\n  }\n\n  return state;\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n"],"sourceRoot":""}